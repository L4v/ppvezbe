Grammar

    0 $accept: program $end

    1 program: function_list

    2 function_list: function
    3              | function_list function

    4 $@1: %empty

    5 function: _TYPE _ID $@1 _LPAREN parameter _RPAREN body

    6 parameter: %empty
    7          | _TYPE _ID

    8 body: _LBRACKET variable_list statement_list _RBRACKET

    9 variable_list: %empty
   10              | variable_list variable

   11 $@2: %empty

   12 variable: _TYPE $@2 ids _SEMICOLON

   13 ids: _ID
   14    | ids _COMMA _ID

   15 statement_list: %empty
   16               | statement_list statement

   17 statement: compound_statement
   18          | assignment_statement
   19          | if_statement
   20          | return_statement
   21          | do_statement

   22 compound_statement: _LBRACKET statement_list _RBRACKET

   23 assignment_statement: assignments num_exp _SEMICOLON

   24 assignments: _ID _ASSIGN
   25            | assignments _ID _ASSIGN

   26 num_exp: exp
   27        | num_exp _AROP exp

   28 exp: literal
   29    | _ID
   30    | function_call
   31    | _LPAREN num_exp _RPAREN
   32    | _ID _POST

   33 literal: _INT_NUMBER
   34        | _UINT_NUMBER

   35 $@3: %empty

   36 function_call: _ID $@3 _LPAREN argument _RPAREN

   37 argument: %empty
   38         | num_exp

   39 if_statement: if_part
   40             | if_part _ELSE statement

   41 $@4: %empty

   42 do_statement: _DO statement _WHILE _LPAREN _ID $@4 _RELOP literal _RPAREN _SEMICOLON

   43 if_part: _IF _LPAREN rel_exp _RPAREN statement

   44 rel_exp: num_exp _RELOP num_exp

   45 return_statement: _RETURN num_exp _SEMICOLON


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    _TYPE <i> (258) 5 7 12
    _IF (259) 43
    _ELSE (260) 40
    _RETURN (261) 45
    _ID <s> (262) 5 7 13 14 24 25 29 32 36 42
    _INT_NUMBER <s> (263) 33
    _UINT_NUMBER <s> (264) 34
    _LPAREN (265) 5 31 36 42 43
    _RPAREN (266) 5 31 36 42 43
    _LBRACKET (267) 8 22
    _RBRACKET (268) 8 22
    _ASSIGN (269) 24 25
    _SEMICOLON (270) 12 23 42 45
    _AROP <i> (271) 27
    _RELOP <i> (272) 42 44
    _COMMA (273) 14
    _POST <i> (274) 32
    _DO (275) 42
    _WHILE (276) 42
    ONLY_IF (277)


Nonterminals, with rules where they appear

    $accept (23)
        on left: 0
    program (24)
        on left: 1
        on right: 0
    function_list (25)
        on left: 2 3
        on right: 1 3
    function (26)
        on left: 5
        on right: 2 3
    $@1 (27)
        on left: 4
        on right: 5
    parameter (28)
        on left: 6 7
        on right: 5
    body (29)
        on left: 8
        on right: 5
    variable_list (30)
        on left: 9 10
        on right: 8 10
    variable (31)
        on left: 12
        on right: 10
    $@2 (32)
        on left: 11
        on right: 12
    ids (33)
        on left: 13 14
        on right: 12 14
    statement_list (34)
        on left: 15 16
        on right: 8 16 22
    statement (35)
        on left: 17 18 19 20 21
        on right: 16 40 42 43
    compound_statement (36)
        on left: 22
        on right: 17
    assignment_statement (37)
        on left: 23
        on right: 18
    assignments <i> (38)
        on left: 24 25
        on right: 23 25
    num_exp <i> (39)
        on left: 26 27
        on right: 23 27 31 38 44 45
    exp <i> (40)
        on left: 28 29 30 31 32
        on right: 26 27
    literal <i> (41)
        on left: 33 34
        on right: 28 42
    function_call <i> (42)
        on left: 36
        on right: 30
    $@3 (43)
        on left: 35
        on right: 36
    argument <i> (44)
        on left: 37 38
        on right: 36
    if_statement (45)
        on left: 39 40
        on right: 19
    do_statement (46)
        on left: 42
        on right: 21
    $@4 (47)
        on left: 41
        on right: 42
    if_part (48)
        on left: 43
        on right: 39 40
    rel_exp <i> (49)
        on left: 44
        on right: 43
    return_statement (50)
        on left: 45
        on right: 20


State 0

    0 $accept: . program $end

    _TYPE  shift, and go to state 1

    program        go to state 2
    function_list  go to state 3
    function       go to state 4


State 1

    5 function: _TYPE . _ID $@1 _LPAREN parameter _RPAREN body

    _ID  shift, and go to state 5


State 2

    0 $accept: program . $end

    $end  shift, and go to state 6


State 3

    1 program: function_list .
    3 function_list: function_list . function

    _TYPE  shift, and go to state 1

    $default  reduce using rule 1 (program)

    function  go to state 7


State 4

    2 function_list: function .

    $default  reduce using rule 2 (function_list)


State 5

    5 function: _TYPE _ID . $@1 _LPAREN parameter _RPAREN body

    $default  reduce using rule 4 ($@1)

    $@1  go to state 8


State 6

    0 $accept: program $end .

    $default  accept


State 7

    3 function_list: function_list function .

    $default  reduce using rule 3 (function_list)


State 8

    5 function: _TYPE _ID $@1 . _LPAREN parameter _RPAREN body

    _LPAREN  shift, and go to state 9


State 9

    5 function: _TYPE _ID $@1 _LPAREN . parameter _RPAREN body

    _TYPE  shift, and go to state 10

    $default  reduce using rule 6 (parameter)

    parameter  go to state 11


State 10

    7 parameter: _TYPE . _ID

    _ID  shift, and go to state 12


State 11

    5 function: _TYPE _ID $@1 _LPAREN parameter . _RPAREN body

    _RPAREN  shift, and go to state 13


State 12

    7 parameter: _TYPE _ID .

    $default  reduce using rule 7 (parameter)


State 13

    5 function: _TYPE _ID $@1 _LPAREN parameter _RPAREN . body

    _LBRACKET  shift, and go to state 14

    body  go to state 15


State 14

    8 body: _LBRACKET . variable_list statement_list _RBRACKET

    $default  reduce using rule 9 (variable_list)

    variable_list  go to state 16


State 15

    5 function: _TYPE _ID $@1 _LPAREN parameter _RPAREN body .

    $default  reduce using rule 5 (function)


State 16

    8 body: _LBRACKET variable_list . statement_list _RBRACKET
   10 variable_list: variable_list . variable

    _TYPE  shift, and go to state 17

    $default  reduce using rule 15 (statement_list)

    variable        go to state 18
    statement_list  go to state 19


State 17

   12 variable: _TYPE . $@2 ids _SEMICOLON

    $default  reduce using rule 11 ($@2)

    $@2  go to state 20


State 18

   10 variable_list: variable_list variable .

    $default  reduce using rule 10 (variable_list)


State 19

    8 body: _LBRACKET variable_list statement_list . _RBRACKET
   16 statement_list: statement_list . statement

    _IF        shift, and go to state 21
    _RETURN    shift, and go to state 22
    _ID        shift, and go to state 23
    _LBRACKET  shift, and go to state 24
    _RBRACKET  shift, and go to state 25
    _DO        shift, and go to state 26

    statement             go to state 27
    compound_statement    go to state 28
    assignment_statement  go to state 29
    assignments           go to state 30
    if_statement          go to state 31
    do_statement          go to state 32
    if_part               go to state 33
    return_statement      go to state 34


State 20

   12 variable: _TYPE $@2 . ids _SEMICOLON

    _ID  shift, and go to state 35

    ids  go to state 36


State 21

   43 if_part: _IF . _LPAREN rel_exp _RPAREN statement

    _LPAREN  shift, and go to state 37


State 22

   45 return_statement: _RETURN . num_exp _SEMICOLON

    _ID           shift, and go to state 38
    _INT_NUMBER   shift, and go to state 39
    _UINT_NUMBER  shift, and go to state 40
    _LPAREN       shift, and go to state 41

    num_exp        go to state 42
    exp            go to state 43
    literal        go to state 44
    function_call  go to state 45


State 23

   24 assignments: _ID . _ASSIGN

    _ASSIGN  shift, and go to state 46


State 24

   22 compound_statement: _LBRACKET . statement_list _RBRACKET

    $default  reduce using rule 15 (statement_list)

    statement_list  go to state 47


State 25

    8 body: _LBRACKET variable_list statement_list _RBRACKET .

    $default  reduce using rule 8 (body)


State 26

   42 do_statement: _DO . statement _WHILE _LPAREN _ID $@4 _RELOP literal _RPAREN _SEMICOLON

    _IF        shift, and go to state 21
    _RETURN    shift, and go to state 22
    _ID        shift, and go to state 23
    _LBRACKET  shift, and go to state 24
    _DO        shift, and go to state 26

    statement             go to state 48
    compound_statement    go to state 28
    assignment_statement  go to state 29
    assignments           go to state 30
    if_statement          go to state 31
    do_statement          go to state 32
    if_part               go to state 33
    return_statement      go to state 34


State 27

   16 statement_list: statement_list statement .

    $default  reduce using rule 16 (statement_list)


State 28

   17 statement: compound_statement .

    $default  reduce using rule 17 (statement)


State 29

   18 statement: assignment_statement .

    $default  reduce using rule 18 (statement)


State 30

   23 assignment_statement: assignments . num_exp _SEMICOLON
   25 assignments: assignments . _ID _ASSIGN

    _ID           shift, and go to state 49
    _INT_NUMBER   shift, and go to state 39
    _UINT_NUMBER  shift, and go to state 40
    _LPAREN       shift, and go to state 41

    num_exp        go to state 50
    exp            go to state 43
    literal        go to state 44
    function_call  go to state 45


State 31

   19 statement: if_statement .

    $default  reduce using rule 19 (statement)


State 32

   21 statement: do_statement .

    $default  reduce using rule 21 (statement)


State 33

   39 if_statement: if_part .
   40             | if_part . _ELSE statement

    _ELSE  shift, and go to state 51

    $default  reduce using rule 39 (if_statement)


State 34

   20 statement: return_statement .

    $default  reduce using rule 20 (statement)


State 35

   13 ids: _ID .

    $default  reduce using rule 13 (ids)


State 36

   12 variable: _TYPE $@2 ids . _SEMICOLON
   14 ids: ids . _COMMA _ID

    _SEMICOLON  shift, and go to state 52
    _COMMA      shift, and go to state 53


State 37

   43 if_part: _IF _LPAREN . rel_exp _RPAREN statement

    _ID           shift, and go to state 38
    _INT_NUMBER   shift, and go to state 39
    _UINT_NUMBER  shift, and go to state 40
    _LPAREN       shift, and go to state 41

    num_exp        go to state 54
    exp            go to state 43
    literal        go to state 44
    function_call  go to state 45
    rel_exp        go to state 55


State 38

   29 exp: _ID .
   32    | _ID . _POST
   36 function_call: _ID . $@3 _LPAREN argument _RPAREN

    _POST  shift, and go to state 56

    _LPAREN   reduce using rule 35 ($@3)
    $default  reduce using rule 29 (exp)

    $@3  go to state 57


State 39

   33 literal: _INT_NUMBER .

    $default  reduce using rule 33 (literal)


State 40

   34 literal: _UINT_NUMBER .

    $default  reduce using rule 34 (literal)


State 41

   31 exp: _LPAREN . num_exp _RPAREN

    _ID           shift, and go to state 38
    _INT_NUMBER   shift, and go to state 39
    _UINT_NUMBER  shift, and go to state 40
    _LPAREN       shift, and go to state 41

    num_exp        go to state 58
    exp            go to state 43
    literal        go to state 44
    function_call  go to state 45


State 42

   27 num_exp: num_exp . _AROP exp
   45 return_statement: _RETURN num_exp . _SEMICOLON

    _SEMICOLON  shift, and go to state 59
    _AROP       shift, and go to state 60


State 43

   26 num_exp: exp .

    $default  reduce using rule 26 (num_exp)


State 44

   28 exp: literal .

    $default  reduce using rule 28 (exp)


State 45

   30 exp: function_call .

    $default  reduce using rule 30 (exp)


State 46

   24 assignments: _ID _ASSIGN .

    $default  reduce using rule 24 (assignments)


State 47

   16 statement_list: statement_list . statement
   22 compound_statement: _LBRACKET statement_list . _RBRACKET

    _IF        shift, and go to state 21
    _RETURN    shift, and go to state 22
    _ID        shift, and go to state 23
    _LBRACKET  shift, and go to state 24
    _RBRACKET  shift, and go to state 61
    _DO        shift, and go to state 26

    statement             go to state 27
    compound_statement    go to state 28
    assignment_statement  go to state 29
    assignments           go to state 30
    if_statement          go to state 31
    do_statement          go to state 32
    if_part               go to state 33
    return_statement      go to state 34


State 48

   42 do_statement: _DO statement . _WHILE _LPAREN _ID $@4 _RELOP literal _RPAREN _SEMICOLON

    _WHILE  shift, and go to state 62


State 49

   25 assignments: assignments _ID . _ASSIGN
   29 exp: _ID .
   32    | _ID . _POST
   36 function_call: _ID . $@3 _LPAREN argument _RPAREN

    _ASSIGN  shift, and go to state 63
    _POST    shift, and go to state 56

    _LPAREN   reduce using rule 35 ($@3)
    $default  reduce using rule 29 (exp)

    $@3  go to state 57


State 50

   23 assignment_statement: assignments num_exp . _SEMICOLON
   27 num_exp: num_exp . _AROP exp

    _SEMICOLON  shift, and go to state 64
    _AROP       shift, and go to state 60


State 51

   40 if_statement: if_part _ELSE . statement

    _IF        shift, and go to state 21
    _RETURN    shift, and go to state 22
    _ID        shift, and go to state 23
    _LBRACKET  shift, and go to state 24
    _DO        shift, and go to state 26

    statement             go to state 65
    compound_statement    go to state 28
    assignment_statement  go to state 29
    assignments           go to state 30
    if_statement          go to state 31
    do_statement          go to state 32
    if_part               go to state 33
    return_statement      go to state 34


State 52

   12 variable: _TYPE $@2 ids _SEMICOLON .

    $default  reduce using rule 12 (variable)


State 53

   14 ids: ids _COMMA . _ID

    _ID  shift, and go to state 66


State 54

   27 num_exp: num_exp . _AROP exp
   44 rel_exp: num_exp . _RELOP num_exp

    _AROP   shift, and go to state 60
    _RELOP  shift, and go to state 67


State 55

   43 if_part: _IF _LPAREN rel_exp . _RPAREN statement

    _RPAREN  shift, and go to state 68


State 56

   32 exp: _ID _POST .

    $default  reduce using rule 32 (exp)


State 57

   36 function_call: _ID $@3 . _LPAREN argument _RPAREN

    _LPAREN  shift, and go to state 69


State 58

   27 num_exp: num_exp . _AROP exp
   31 exp: _LPAREN num_exp . _RPAREN

    _RPAREN  shift, and go to state 70
    _AROP    shift, and go to state 60


State 59

   45 return_statement: _RETURN num_exp _SEMICOLON .

    $default  reduce using rule 45 (return_statement)


State 60

   27 num_exp: num_exp _AROP . exp

    _ID           shift, and go to state 38
    _INT_NUMBER   shift, and go to state 39
    _UINT_NUMBER  shift, and go to state 40
    _LPAREN       shift, and go to state 41

    exp            go to state 71
    literal        go to state 44
    function_call  go to state 45


State 61

   22 compound_statement: _LBRACKET statement_list _RBRACKET .

    $default  reduce using rule 22 (compound_statement)


State 62

   42 do_statement: _DO statement _WHILE . _LPAREN _ID $@4 _RELOP literal _RPAREN _SEMICOLON

    _LPAREN  shift, and go to state 72


State 63

   25 assignments: assignments _ID _ASSIGN .

    $default  reduce using rule 25 (assignments)


State 64

   23 assignment_statement: assignments num_exp _SEMICOLON .

    $default  reduce using rule 23 (assignment_statement)


State 65

   40 if_statement: if_part _ELSE statement .

    $default  reduce using rule 40 (if_statement)


State 66

   14 ids: ids _COMMA _ID .

    $default  reduce using rule 14 (ids)


State 67

   44 rel_exp: num_exp _RELOP . num_exp

    _ID           shift, and go to state 38
    _INT_NUMBER   shift, and go to state 39
    _UINT_NUMBER  shift, and go to state 40
    _LPAREN       shift, and go to state 41

    num_exp        go to state 73
    exp            go to state 43
    literal        go to state 44
    function_call  go to state 45


State 68

   43 if_part: _IF _LPAREN rel_exp _RPAREN . statement

    _IF        shift, and go to state 21
    _RETURN    shift, and go to state 22
    _ID        shift, and go to state 23
    _LBRACKET  shift, and go to state 24
    _DO        shift, and go to state 26

    statement             go to state 74
    compound_statement    go to state 28
    assignment_statement  go to state 29
    assignments           go to state 30
    if_statement          go to state 31
    do_statement          go to state 32
    if_part               go to state 33
    return_statement      go to state 34


State 69

   36 function_call: _ID $@3 _LPAREN . argument _RPAREN

    _ID           shift, and go to state 38
    _INT_NUMBER   shift, and go to state 39
    _UINT_NUMBER  shift, and go to state 40
    _LPAREN       shift, and go to state 41

    $default  reduce using rule 37 (argument)

    num_exp        go to state 75
    exp            go to state 43
    literal        go to state 44
    function_call  go to state 45
    argument       go to state 76


State 70

   31 exp: _LPAREN num_exp _RPAREN .

    $default  reduce using rule 31 (exp)


State 71

   27 num_exp: num_exp _AROP exp .

    $default  reduce using rule 27 (num_exp)


State 72

   42 do_statement: _DO statement _WHILE _LPAREN . _ID $@4 _RELOP literal _RPAREN _SEMICOLON

    _ID  shift, and go to state 77


State 73

   27 num_exp: num_exp . _AROP exp
   44 rel_exp: num_exp _RELOP num_exp .

    _AROP  shift, and go to state 60

    $default  reduce using rule 44 (rel_exp)


State 74

   43 if_part: _IF _LPAREN rel_exp _RPAREN statement .

    $default  reduce using rule 43 (if_part)


State 75

   27 num_exp: num_exp . _AROP exp
   38 argument: num_exp .

    _AROP  shift, and go to state 60

    $default  reduce using rule 38 (argument)


State 76

   36 function_call: _ID $@3 _LPAREN argument . _RPAREN

    _RPAREN  shift, and go to state 78


State 77

   42 do_statement: _DO statement _WHILE _LPAREN _ID . $@4 _RELOP literal _RPAREN _SEMICOLON

    $default  reduce using rule 41 ($@4)

    $@4  go to state 79


State 78

   36 function_call: _ID $@3 _LPAREN argument _RPAREN .

    $default  reduce using rule 36 (function_call)


State 79

   42 do_statement: _DO statement _WHILE _LPAREN _ID $@4 . _RELOP literal _RPAREN _SEMICOLON

    _RELOP  shift, and go to state 80


State 80

   42 do_statement: _DO statement _WHILE _LPAREN _ID $@4 _RELOP . literal _RPAREN _SEMICOLON

    _INT_NUMBER   shift, and go to state 39
    _UINT_NUMBER  shift, and go to state 40

    literal  go to state 81


State 81

   42 do_statement: _DO statement _WHILE _LPAREN _ID $@4 _RELOP literal . _RPAREN _SEMICOLON

    _RPAREN  shift, and go to state 82


State 82

   42 do_statement: _DO statement _WHILE _LPAREN _ID $@4 _RELOP literal _RPAREN . _SEMICOLON

    _SEMICOLON  shift, and go to state 83


State 83

   42 do_statement: _DO statement _WHILE _LPAREN _ID $@4 _RELOP literal _RPAREN _SEMICOLON .

    $default  reduce using rule 42 (do_statement)
