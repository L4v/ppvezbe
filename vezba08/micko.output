Grammar

    0 $accept: program $end

    1 program: function_list

    2 function_list: function
    3              | function_list function

    4 $@1: %empty

    5 function: _TYPE _ID $@1 _LPAREN parameter _RPAREN body

    6 parameter: %empty
    7          | _TYPE _ID

    8 $@2: %empty

    9 body: _LBRACKET variable_list $@2 statement_list _RBRACKET

   10 variable_list: %empty
   11              | variable_list variable

   12 variable: _TYPE _ID _SEMICOLON

   13 statement_list: %empty
   14               | statement_list statement

   15 statement: compound_statement
   16          | assignment_statement
   17          | if_statement
   18          | return_statement

   19 compound_statement: _LBRACKET statement_list _RBRACKET

   20 assignment_statement: _ID _ASSIGN num_exp _SEMICOLON

   21 num_exp: exp
   22        | num_exp _AROP num_exp
   23        | num_exp _MULDIV exp

   24 exp: literal
   25    | _ID
   26    | function_call
   27    | _LPAREN num_exp _RPAREN
   28    | _LPAREN rel_exp _RPAREN _QMARK cond_exp _COLON cond_exp

   29 cond_exp: _ID
   30         | literal

   31 literal: _INT_NUMBER
   32        | _UINT_NUMBER

   33 $@3: %empty

   34 function_call: _ID $@3 _LPAREN argument _RPAREN

   35 argument: %empty
   36         | num_exp

   37 if_statement: if_part
   38             | if_part _ELSE statement

   39 @4: %empty

   40 $@5: %empty

   41 if_part: _IF _LPAREN @4 rel_exp $@5 _RPAREN statement

   42 rel_exp: num_exp _RELOP num_exp

   43 return_statement: _RETURN num_exp _SEMICOLON


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    _TYPE <i> (258) 5 7 12
    _IF (259) 41
    _ELSE (260) 38
    _RETURN (261) 43
    _ID <s> (262) 5 7 12 20 25 29 34
    _INT_NUMBER <s> (263) 31
    _UINT_NUMBER <s> (264) 32
    _LPAREN (265) 5 27 28 34 41
    _RPAREN (266) 5 27 28 34 41
    _LBRACKET (267) 9 19
    _RBRACKET (268) 9 19
    _ASSIGN (269) 20
    _SEMICOLON (270) 12 20 43
    _AROP <i> (271) 22
    _MULDIV <i> (272) 23
    _RELOP <i> (273) 42
    _QMARK (274) 28
    _COLON (275) 28
    ONLY_IF (276)


Nonterminals, with rules where they appear

    $accept (22)
        on left: 0
    program (23)
        on left: 1
        on right: 0
    function_list (24)
        on left: 2 3
        on right: 1 3
    function (25)
        on left: 5
        on right: 2 3
    $@1 (26)
        on left: 4
        on right: 5
    parameter (27)
        on left: 6 7
        on right: 5
    body (28)
        on left: 9
        on right: 5
    $@2 (29)
        on left: 8
        on right: 9
    variable_list (30)
        on left: 10 11
        on right: 9 11
    variable (31)
        on left: 12
        on right: 11
    statement_list (32)
        on left: 13 14
        on right: 9 14 19
    statement (33)
        on left: 15 16 17 18
        on right: 14 38 41
    compound_statement (34)
        on left: 19
        on right: 15
    assignment_statement (35)
        on left: 20
        on right: 16
    num_exp <i> (36)
        on left: 21 22 23
        on right: 20 22 23 27 36 42 43
    exp <i> (37)
        on left: 24 25 26 27 28
        on right: 21 23
    cond_exp <i> (38)
        on left: 29 30
        on right: 28
    literal <i> (39)
        on left: 31 32
        on right: 24 30
    function_call <i> (40)
        on left: 34
        on right: 26
    $@3 (41)
        on left: 33
        on right: 34
    argument <i> (42)
        on left: 35 36
        on right: 34
    if_statement (43)
        on left: 37 38
        on right: 17
    if_part <i> (44)
        on left: 41
        on right: 37 38
    @4 (45)
        on left: 39
        on right: 41
    $@5 (46)
        on left: 40
        on right: 41
    rel_exp <i> (47)
        on left: 42
        on right: 28 41
    return_statement (48)
        on left: 43
        on right: 18


State 0

    0 $accept: . program $end

    _TYPE  shift, and go to state 1

    program        go to state 2
    function_list  go to state 3
    function       go to state 4


State 1

    5 function: _TYPE . _ID $@1 _LPAREN parameter _RPAREN body

    _ID  shift, and go to state 5


State 2

    0 $accept: program . $end

    $end  shift, and go to state 6


State 3

    1 program: function_list .
    3 function_list: function_list . function

    _TYPE  shift, and go to state 1

    $default  reduce using rule 1 (program)

    function  go to state 7


State 4

    2 function_list: function .

    $default  reduce using rule 2 (function_list)


State 5

    5 function: _TYPE _ID . $@1 _LPAREN parameter _RPAREN body

    $default  reduce using rule 4 ($@1)

    $@1  go to state 8


State 6

    0 $accept: program $end .

    $default  accept


State 7

    3 function_list: function_list function .

    $default  reduce using rule 3 (function_list)


State 8

    5 function: _TYPE _ID $@1 . _LPAREN parameter _RPAREN body

    _LPAREN  shift, and go to state 9


State 9

    5 function: _TYPE _ID $@1 _LPAREN . parameter _RPAREN body

    _TYPE  shift, and go to state 10

    $default  reduce using rule 6 (parameter)

    parameter  go to state 11


State 10

    7 parameter: _TYPE . _ID

    _ID  shift, and go to state 12


State 11

    5 function: _TYPE _ID $@1 _LPAREN parameter . _RPAREN body

    _RPAREN  shift, and go to state 13


State 12

    7 parameter: _TYPE _ID .

    $default  reduce using rule 7 (parameter)


State 13

    5 function: _TYPE _ID $@1 _LPAREN parameter _RPAREN . body

    _LBRACKET  shift, and go to state 14

    body  go to state 15


State 14

    9 body: _LBRACKET . variable_list $@2 statement_list _RBRACKET

    $default  reduce using rule 10 (variable_list)

    variable_list  go to state 16


State 15

    5 function: _TYPE _ID $@1 _LPAREN parameter _RPAREN body .

    $default  reduce using rule 5 (function)


State 16

    9 body: _LBRACKET variable_list . $@2 statement_list _RBRACKET
   11 variable_list: variable_list . variable

    _TYPE  shift, and go to state 17

    $default  reduce using rule 8 ($@2)

    $@2       go to state 18
    variable  go to state 19


State 17

   12 variable: _TYPE . _ID _SEMICOLON

    _ID  shift, and go to state 20


State 18

    9 body: _LBRACKET variable_list $@2 . statement_list _RBRACKET

    $default  reduce using rule 13 (statement_list)

    statement_list  go to state 21


State 19

   11 variable_list: variable_list variable .

    $default  reduce using rule 11 (variable_list)


State 20

   12 variable: _TYPE _ID . _SEMICOLON

    _SEMICOLON  shift, and go to state 22


State 21

    9 body: _LBRACKET variable_list $@2 statement_list . _RBRACKET
   14 statement_list: statement_list . statement

    _IF        shift, and go to state 23
    _RETURN    shift, and go to state 24
    _ID        shift, and go to state 25
    _LBRACKET  shift, and go to state 26
    _RBRACKET  shift, and go to state 27

    statement             go to state 28
    compound_statement    go to state 29
    assignment_statement  go to state 30
    if_statement          go to state 31
    if_part               go to state 32
    return_statement      go to state 33


State 22

   12 variable: _TYPE _ID _SEMICOLON .

    $default  reduce using rule 12 (variable)


State 23

   41 if_part: _IF . _LPAREN @4 rel_exp $@5 _RPAREN statement

    _LPAREN  shift, and go to state 34


State 24

   43 return_statement: _RETURN . num_exp _SEMICOLON

    _ID           shift, and go to state 35
    _INT_NUMBER   shift, and go to state 36
    _UINT_NUMBER  shift, and go to state 37
    _LPAREN       shift, and go to state 38

    num_exp        go to state 39
    exp            go to state 40
    literal        go to state 41
    function_call  go to state 42


State 25

   20 assignment_statement: _ID . _ASSIGN num_exp _SEMICOLON

    _ASSIGN  shift, and go to state 43


State 26

   19 compound_statement: _LBRACKET . statement_list _RBRACKET

    $default  reduce using rule 13 (statement_list)

    statement_list  go to state 44


State 27

    9 body: _LBRACKET variable_list $@2 statement_list _RBRACKET .

    $default  reduce using rule 9 (body)


State 28

   14 statement_list: statement_list statement .

    $default  reduce using rule 14 (statement_list)


State 29

   15 statement: compound_statement .

    $default  reduce using rule 15 (statement)


State 30

   16 statement: assignment_statement .

    $default  reduce using rule 16 (statement)


State 31

   17 statement: if_statement .

    $default  reduce using rule 17 (statement)


State 32

   37 if_statement: if_part .
   38             | if_part . _ELSE statement

    _ELSE  shift, and go to state 45

    $default  reduce using rule 37 (if_statement)


State 33

   18 statement: return_statement .

    $default  reduce using rule 18 (statement)


State 34

   41 if_part: _IF _LPAREN . @4 rel_exp $@5 _RPAREN statement

    $default  reduce using rule 39 (@4)

    @4  go to state 46


State 35

   25 exp: _ID .
   34 function_call: _ID . $@3 _LPAREN argument _RPAREN

    _LPAREN   reduce using rule 33 ($@3)
    $default  reduce using rule 25 (exp)

    $@3  go to state 47


State 36

   31 literal: _INT_NUMBER .

    $default  reduce using rule 31 (literal)


State 37

   32 literal: _UINT_NUMBER .

    $default  reduce using rule 32 (literal)


State 38

   27 exp: _LPAREN . num_exp _RPAREN
   28    | _LPAREN . rel_exp _RPAREN _QMARK cond_exp _COLON cond_exp

    _ID           shift, and go to state 35
    _INT_NUMBER   shift, and go to state 36
    _UINT_NUMBER  shift, and go to state 37
    _LPAREN       shift, and go to state 38

    num_exp        go to state 48
    exp            go to state 40
    literal        go to state 41
    function_call  go to state 42
    rel_exp        go to state 49


State 39

   22 num_exp: num_exp . _AROP num_exp
   23        | num_exp . _MULDIV exp
   43 return_statement: _RETURN num_exp . _SEMICOLON

    _SEMICOLON  shift, and go to state 50
    _AROP       shift, and go to state 51
    _MULDIV     shift, and go to state 52


State 40

   21 num_exp: exp .

    $default  reduce using rule 21 (num_exp)


State 41

   24 exp: literal .

    $default  reduce using rule 24 (exp)


State 42

   26 exp: function_call .

    $default  reduce using rule 26 (exp)


State 43

   20 assignment_statement: _ID _ASSIGN . num_exp _SEMICOLON

    _ID           shift, and go to state 35
    _INT_NUMBER   shift, and go to state 36
    _UINT_NUMBER  shift, and go to state 37
    _LPAREN       shift, and go to state 38

    num_exp        go to state 53
    exp            go to state 40
    literal        go to state 41
    function_call  go to state 42


State 44

   14 statement_list: statement_list . statement
   19 compound_statement: _LBRACKET statement_list . _RBRACKET

    _IF        shift, and go to state 23
    _RETURN    shift, and go to state 24
    _ID        shift, and go to state 25
    _LBRACKET  shift, and go to state 26
    _RBRACKET  shift, and go to state 54

    statement             go to state 28
    compound_statement    go to state 29
    assignment_statement  go to state 30
    if_statement          go to state 31
    if_part               go to state 32
    return_statement      go to state 33


State 45

   38 if_statement: if_part _ELSE . statement

    _IF        shift, and go to state 23
    _RETURN    shift, and go to state 24
    _ID        shift, and go to state 25
    _LBRACKET  shift, and go to state 26

    statement             go to state 55
    compound_statement    go to state 29
    assignment_statement  go to state 30
    if_statement          go to state 31
    if_part               go to state 32
    return_statement      go to state 33


State 46

   41 if_part: _IF _LPAREN @4 . rel_exp $@5 _RPAREN statement

    _ID           shift, and go to state 35
    _INT_NUMBER   shift, and go to state 36
    _UINT_NUMBER  shift, and go to state 37
    _LPAREN       shift, and go to state 38

    num_exp        go to state 56
    exp            go to state 40
    literal        go to state 41
    function_call  go to state 42
    rel_exp        go to state 57


State 47

   34 function_call: _ID $@3 . _LPAREN argument _RPAREN

    _LPAREN  shift, and go to state 58


State 48

   22 num_exp: num_exp . _AROP num_exp
   23        | num_exp . _MULDIV exp
   27 exp: _LPAREN num_exp . _RPAREN
   42 rel_exp: num_exp . _RELOP num_exp

    _RPAREN  shift, and go to state 59
    _AROP    shift, and go to state 51
    _MULDIV  shift, and go to state 52
    _RELOP   shift, and go to state 60


State 49

   28 exp: _LPAREN rel_exp . _RPAREN _QMARK cond_exp _COLON cond_exp

    _RPAREN  shift, and go to state 61


State 50

   43 return_statement: _RETURN num_exp _SEMICOLON .

    $default  reduce using rule 43 (return_statement)


State 51

   22 num_exp: num_exp _AROP . num_exp

    _ID           shift, and go to state 35
    _INT_NUMBER   shift, and go to state 36
    _UINT_NUMBER  shift, and go to state 37
    _LPAREN       shift, and go to state 38

    num_exp        go to state 62
    exp            go to state 40
    literal        go to state 41
    function_call  go to state 42


State 52

   23 num_exp: num_exp _MULDIV . exp

    _ID           shift, and go to state 35
    _INT_NUMBER   shift, and go to state 36
    _UINT_NUMBER  shift, and go to state 37
    _LPAREN       shift, and go to state 38

    exp            go to state 63
    literal        go to state 41
    function_call  go to state 42


State 53

   20 assignment_statement: _ID _ASSIGN num_exp . _SEMICOLON
   22 num_exp: num_exp . _AROP num_exp
   23        | num_exp . _MULDIV exp

    _SEMICOLON  shift, and go to state 64
    _AROP       shift, and go to state 51
    _MULDIV     shift, and go to state 52


State 54

   19 compound_statement: _LBRACKET statement_list _RBRACKET .

    $default  reduce using rule 19 (compound_statement)


State 55

   38 if_statement: if_part _ELSE statement .

    $default  reduce using rule 38 (if_statement)


State 56

   22 num_exp: num_exp . _AROP num_exp
   23        | num_exp . _MULDIV exp
   42 rel_exp: num_exp . _RELOP num_exp

    _AROP    shift, and go to state 51
    _MULDIV  shift, and go to state 52
    _RELOP   shift, and go to state 60


State 57

   41 if_part: _IF _LPAREN @4 rel_exp . $@5 _RPAREN statement

    $default  reduce using rule 40 ($@5)

    $@5  go to state 65


State 58

   34 function_call: _ID $@3 _LPAREN . argument _RPAREN

    _ID           shift, and go to state 35
    _INT_NUMBER   shift, and go to state 36
    _UINT_NUMBER  shift, and go to state 37
    _LPAREN       shift, and go to state 38

    $default  reduce using rule 35 (argument)

    num_exp        go to state 66
    exp            go to state 40
    literal        go to state 41
    function_call  go to state 42
    argument       go to state 67


State 59

   27 exp: _LPAREN num_exp _RPAREN .

    $default  reduce using rule 27 (exp)


State 60

   42 rel_exp: num_exp _RELOP . num_exp

    _ID           shift, and go to state 35
    _INT_NUMBER   shift, and go to state 36
    _UINT_NUMBER  shift, and go to state 37
    _LPAREN       shift, and go to state 38

    num_exp        go to state 68
    exp            go to state 40
    literal        go to state 41
    function_call  go to state 42


State 61

   28 exp: _LPAREN rel_exp _RPAREN . _QMARK cond_exp _COLON cond_exp

    _QMARK  shift, and go to state 69


State 62

   22 num_exp: num_exp . _AROP num_exp
   22        | num_exp _AROP num_exp .
   23        | num_exp . _MULDIV exp

    _MULDIV  shift, and go to state 52

    $default  reduce using rule 22 (num_exp)


State 63

   23 num_exp: num_exp _MULDIV exp .

    $default  reduce using rule 23 (num_exp)


State 64

   20 assignment_statement: _ID _ASSIGN num_exp _SEMICOLON .

    $default  reduce using rule 20 (assignment_statement)


State 65

   41 if_part: _IF _LPAREN @4 rel_exp $@5 . _RPAREN statement

    _RPAREN  shift, and go to state 70


State 66

   22 num_exp: num_exp . _AROP num_exp
   23        | num_exp . _MULDIV exp
   36 argument: num_exp .

    _AROP    shift, and go to state 51
    _MULDIV  shift, and go to state 52

    $default  reduce using rule 36 (argument)


State 67

   34 function_call: _ID $@3 _LPAREN argument . _RPAREN

    _RPAREN  shift, and go to state 71


State 68

   22 num_exp: num_exp . _AROP num_exp
   23        | num_exp . _MULDIV exp
   42 rel_exp: num_exp _RELOP num_exp .

    _AROP    shift, and go to state 51
    _MULDIV  shift, and go to state 52

    $default  reduce using rule 42 (rel_exp)


State 69

   28 exp: _LPAREN rel_exp _RPAREN _QMARK . cond_exp _COLON cond_exp

    _ID           shift, and go to state 72
    _INT_NUMBER   shift, and go to state 36
    _UINT_NUMBER  shift, and go to state 37

    cond_exp  go to state 73
    literal   go to state 74


State 70

   41 if_part: _IF _LPAREN @4 rel_exp $@5 _RPAREN . statement

    _IF        shift, and go to state 23
    _RETURN    shift, and go to state 24
    _ID        shift, and go to state 25
    _LBRACKET  shift, and go to state 26

    statement             go to state 75
    compound_statement    go to state 29
    assignment_statement  go to state 30
    if_statement          go to state 31
    if_part               go to state 32
    return_statement      go to state 33


State 71

   34 function_call: _ID $@3 _LPAREN argument _RPAREN .

    $default  reduce using rule 34 (function_call)


State 72

   29 cond_exp: _ID .

    $default  reduce using rule 29 (cond_exp)


State 73

   28 exp: _LPAREN rel_exp _RPAREN _QMARK cond_exp . _COLON cond_exp

    _COLON  shift, and go to state 76


State 74

   30 cond_exp: literal .

    $default  reduce using rule 30 (cond_exp)


State 75

   41 if_part: _IF _LPAREN @4 rel_exp $@5 _RPAREN statement .

    $default  reduce using rule 41 (if_part)


State 76

   28 exp: _LPAREN rel_exp _RPAREN _QMARK cond_exp _COLON . cond_exp

    _ID           shift, and go to state 72
    _INT_NUMBER   shift, and go to state 36
    _UINT_NUMBER  shift, and go to state 37

    cond_exp  go to state 77
    literal   go to state 74


State 77

   28 exp: _LPAREN rel_exp _RPAREN _QMARK cond_exp _COLON cond_exp .

    $default  reduce using rule 28 (exp)
