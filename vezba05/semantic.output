Grammar

    0 $accept: program $end

    1 program: function_list

    2 function_list: function
    3              | function_list function

    4 $@1: %empty

    5 $@2: %empty

    6 function: type _ID $@1 _LPAREN parameter _RPAREN $@2 body

    7 type: _TYPE

    8 parameter: %empty
    9          | type _ID

   10 body: _LBRACKET variable_list statement_list _RBRACKET

   11 variable_list: %empty
   12              | variable_list variable

   13 $@3: %empty

   14 variable: type $@3 ids _SEMICOLON

   15 ids: _ID
   16    | ids _COMMA _ID

   17 statement_list: %empty
   18               | statement_list statement

   19 statement: compound_statement
   20          | assignment_statement
   21          | if_statement
   22          | return_statement

   23 compound_statement: _LBRACKET statement_list _RBRACKET

   24 assignment_statement: _ID _ASSIGN num_exp _SEMICOLON

   25 num_exp: exp
   26        | num_exp _AROP exp

   27 exp: literal
   28    | _ID
   29    | _ID _POSTINC
   30    | function_call
   31    | _LPAREN num_exp _RPAREN

   32 literal: _INT_NUMBER
   33        | _UINT_NUMBER

   34 $@4: %empty

   35 function_call: _ID $@4 _LPAREN argument _RPAREN

   36 argument: %empty
   37         | num_exp

   38 if_statement: if_part
   39             | if_part _ELSE statement

   40 if_part: _IF _LPAREN rel_exp _RPAREN statement

   41 rel_exp: num_exp _RELOP num_exp

   42 return_statement: _RETURN _SEMICOLON
   43                 | _RETURN num_exp _SEMICOLON


Terminals, with rules where they appear

$end (0) 0
error (256)
_TYPE (258) 7
_IF (259) 40
_ELSE (260) 39
_RETURN (261) 42 43
_ID (262) 6 9 15 16 24 28 29 35
_INT_NUMBER (263) 32
_UINT_NUMBER (264) 33
_LPAREN (265) 6 31 35 40
_RPAREN (266) 6 31 35 40
_LBRACKET (267) 10 23
_RBRACKET (268) 10 23
_ASSIGN (269) 24
_SEMICOLON (270) 14 24 42 43
_AROP (271) 26
_RELOP (272) 41
_COMMA (273) 16
_POSTINC (274) 29
ONLY_IF (275)


Nonterminals, with rules where they appear

$accept (21)
    on left: 0
program (22)
    on left: 1, on right: 0
function_list (23)
    on left: 2 3, on right: 1 3
function (24)
    on left: 6, on right: 2 3
$@1 (25)
    on left: 4, on right: 6
$@2 (26)
    on left: 5, on right: 6
type (27)
    on left: 7, on right: 6 9 14
parameter (28)
    on left: 8 9, on right: 6
body (29)
    on left: 10, on right: 6
variable_list (30)
    on left: 11 12, on right: 10 12
variable (31)
    on left: 14, on right: 12
$@3 (32)
    on left: 13, on right: 14
ids (33)
    on left: 15 16, on right: 14 16
statement_list (34)
    on left: 17 18, on right: 10 18 23
statement (35)
    on left: 19 20 21 22, on right: 18 39 40
compound_statement (36)
    on left: 23, on right: 19
assignment_statement (37)
    on left: 24, on right: 20
num_exp (38)
    on left: 25 26, on right: 24 26 31 37 41 43
exp (39)
    on left: 27 28 29 30 31, on right: 25 26
literal (40)
    on left: 32 33, on right: 27
function_call (41)
    on left: 35, on right: 30
$@4 (42)
    on left: 34, on right: 35
argument (43)
    on left: 36 37, on right: 35
if_statement (44)
    on left: 38 39, on right: 21
if_part (45)
    on left: 40, on right: 38 39
rel_exp (46)
    on left: 41, on right: 40
return_statement (47)
    on left: 42 43, on right: 22


State 0

    0 $accept: . program $end

    _TYPE  shift, and go to state 1

    program        go to state 2
    function_list  go to state 3
    function       go to state 4
    type           go to state 5


State 1

    7 type: _TYPE .

    $default  reduce using rule 7 (type)


State 2

    0 $accept: program . $end

    $end  shift, and go to state 6


State 3

    1 program: function_list .
    3 function_list: function_list . function

    _TYPE  shift, and go to state 1

    $default  reduce using rule 1 (program)

    function  go to state 7
    type      go to state 5


State 4

    2 function_list: function .

    $default  reduce using rule 2 (function_list)


State 5

    6 function: type . _ID $@1 _LPAREN parameter _RPAREN $@2 body

    _ID  shift, and go to state 8


State 6

    0 $accept: program $end .

    $default  accept


State 7

    3 function_list: function_list function .

    $default  reduce using rule 3 (function_list)


State 8

    6 function: type _ID . $@1 _LPAREN parameter _RPAREN $@2 body

    $default  reduce using rule 4 ($@1)

    $@1  go to state 9


State 9

    6 function: type _ID $@1 . _LPAREN parameter _RPAREN $@2 body

    _LPAREN  shift, and go to state 10


State 10

    6 function: type _ID $@1 _LPAREN . parameter _RPAREN $@2 body

    _TYPE  shift, and go to state 1

    $default  reduce using rule 8 (parameter)

    type       go to state 11
    parameter  go to state 12


State 11

    9 parameter: type . _ID

    _ID  shift, and go to state 13


State 12

    6 function: type _ID $@1 _LPAREN parameter . _RPAREN $@2 body

    _RPAREN  shift, and go to state 14


State 13

    9 parameter: type _ID .

    $default  reduce using rule 9 (parameter)


State 14

    6 function: type _ID $@1 _LPAREN parameter _RPAREN . $@2 body

    $default  reduce using rule 5 ($@2)

    $@2  go to state 15


State 15

    6 function: type _ID $@1 _LPAREN parameter _RPAREN $@2 . body

    _LBRACKET  shift, and go to state 16

    body  go to state 17


State 16

   10 body: _LBRACKET . variable_list statement_list _RBRACKET

    $default  reduce using rule 11 (variable_list)

    variable_list  go to state 18


State 17

    6 function: type _ID $@1 _LPAREN parameter _RPAREN $@2 body .

    $default  reduce using rule 6 (function)


State 18

   10 body: _LBRACKET variable_list . statement_list _RBRACKET
   12 variable_list: variable_list . variable

    _TYPE  shift, and go to state 1

    $default  reduce using rule 17 (statement_list)

    type            go to state 19
    variable        go to state 20
    statement_list  go to state 21


State 19

   14 variable: type . $@3 ids _SEMICOLON

    $default  reduce using rule 13 ($@3)

    $@3  go to state 22


State 20

   12 variable_list: variable_list variable .

    $default  reduce using rule 12 (variable_list)


State 21

   10 body: _LBRACKET variable_list statement_list . _RBRACKET
   18 statement_list: statement_list . statement

    _IF        shift, and go to state 23
    _RETURN    shift, and go to state 24
    _ID        shift, and go to state 25
    _LBRACKET  shift, and go to state 26
    _RBRACKET  shift, and go to state 27

    statement             go to state 28
    compound_statement    go to state 29
    assignment_statement  go to state 30
    if_statement          go to state 31
    if_part               go to state 32
    return_statement      go to state 33


State 22

   14 variable: type $@3 . ids _SEMICOLON

    _ID  shift, and go to state 34

    ids  go to state 35


State 23

   40 if_part: _IF . _LPAREN rel_exp _RPAREN statement

    _LPAREN  shift, and go to state 36


State 24

   42 return_statement: _RETURN . _SEMICOLON
   43                 | _RETURN . num_exp _SEMICOLON

    _ID           shift, and go to state 37
    _INT_NUMBER   shift, and go to state 38
    _UINT_NUMBER  shift, and go to state 39
    _LPAREN       shift, and go to state 40
    _SEMICOLON    shift, and go to state 41

    num_exp        go to state 42
    exp            go to state 43
    literal        go to state 44
    function_call  go to state 45


State 25

   24 assignment_statement: _ID . _ASSIGN num_exp _SEMICOLON

    _ASSIGN  shift, and go to state 46


State 26

   23 compound_statement: _LBRACKET . statement_list _RBRACKET

    $default  reduce using rule 17 (statement_list)

    statement_list  go to state 47


State 27

   10 body: _LBRACKET variable_list statement_list _RBRACKET .

    $default  reduce using rule 10 (body)


State 28

   18 statement_list: statement_list statement .

    $default  reduce using rule 18 (statement_list)


State 29

   19 statement: compound_statement .

    $default  reduce using rule 19 (statement)


State 30

   20 statement: assignment_statement .

    $default  reduce using rule 20 (statement)


State 31

   21 statement: if_statement .

    $default  reduce using rule 21 (statement)


State 32

   38 if_statement: if_part .
   39             | if_part . _ELSE statement

    _ELSE  shift, and go to state 48

    $default  reduce using rule 38 (if_statement)


State 33

   22 statement: return_statement .

    $default  reduce using rule 22 (statement)


State 34

   15 ids: _ID .

    $default  reduce using rule 15 (ids)


State 35

   14 variable: type $@3 ids . _SEMICOLON
   16 ids: ids . _COMMA _ID

    _SEMICOLON  shift, and go to state 49
    _COMMA      shift, and go to state 50


State 36

   40 if_part: _IF _LPAREN . rel_exp _RPAREN statement

    _ID           shift, and go to state 37
    _INT_NUMBER   shift, and go to state 38
    _UINT_NUMBER  shift, and go to state 39
    _LPAREN       shift, and go to state 40

    num_exp        go to state 51
    exp            go to state 43
    literal        go to state 44
    function_call  go to state 45
    rel_exp        go to state 52


State 37

   28 exp: _ID .
   29    | _ID . _POSTINC
   35 function_call: _ID . $@4 _LPAREN argument _RPAREN

    _POSTINC  shift, and go to state 53

    _LPAREN   reduce using rule 34 ($@4)
    $default  reduce using rule 28 (exp)

    $@4  go to state 54


State 38

   32 literal: _INT_NUMBER .

    $default  reduce using rule 32 (literal)


State 39

   33 literal: _UINT_NUMBER .

    $default  reduce using rule 33 (literal)


State 40

   31 exp: _LPAREN . num_exp _RPAREN

    _ID           shift, and go to state 37
    _INT_NUMBER   shift, and go to state 38
    _UINT_NUMBER  shift, and go to state 39
    _LPAREN       shift, and go to state 40

    num_exp        go to state 55
    exp            go to state 43
    literal        go to state 44
    function_call  go to state 45


State 41

   42 return_statement: _RETURN _SEMICOLON .

    $default  reduce using rule 42 (return_statement)


State 42

   26 num_exp: num_exp . _AROP exp
   43 return_statement: _RETURN num_exp . _SEMICOLON

    _SEMICOLON  shift, and go to state 56
    _AROP       shift, and go to state 57


State 43

   25 num_exp: exp .

    $default  reduce using rule 25 (num_exp)


State 44

   27 exp: literal .

    $default  reduce using rule 27 (exp)


State 45

   30 exp: function_call .

    $default  reduce using rule 30 (exp)


State 46

   24 assignment_statement: _ID _ASSIGN . num_exp _SEMICOLON

    _ID           shift, and go to state 37
    _INT_NUMBER   shift, and go to state 38
    _UINT_NUMBER  shift, and go to state 39
    _LPAREN       shift, and go to state 40

    num_exp        go to state 58
    exp            go to state 43
    literal        go to state 44
    function_call  go to state 45


State 47

   18 statement_list: statement_list . statement
   23 compound_statement: _LBRACKET statement_list . _RBRACKET

    _IF        shift, and go to state 23
    _RETURN    shift, and go to state 24
    _ID        shift, and go to state 25
    _LBRACKET  shift, and go to state 26
    _RBRACKET  shift, and go to state 59

    statement             go to state 28
    compound_statement    go to state 29
    assignment_statement  go to state 30
    if_statement          go to state 31
    if_part               go to state 32
    return_statement      go to state 33


State 48

   39 if_statement: if_part _ELSE . statement

    _IF        shift, and go to state 23
    _RETURN    shift, and go to state 24
    _ID        shift, and go to state 25
    _LBRACKET  shift, and go to state 26

    statement             go to state 60
    compound_statement    go to state 29
    assignment_statement  go to state 30
    if_statement          go to state 31
    if_part               go to state 32
    return_statement      go to state 33


State 49

   14 variable: type $@3 ids _SEMICOLON .

    $default  reduce using rule 14 (variable)


State 50

   16 ids: ids _COMMA . _ID

    _ID  shift, and go to state 61


State 51

   26 num_exp: num_exp . _AROP exp
   41 rel_exp: num_exp . _RELOP num_exp

    _AROP   shift, and go to state 57
    _RELOP  shift, and go to state 62


State 52

   40 if_part: _IF _LPAREN rel_exp . _RPAREN statement

    _RPAREN  shift, and go to state 63


State 53

   29 exp: _ID _POSTINC .

    $default  reduce using rule 29 (exp)


State 54

   35 function_call: _ID $@4 . _LPAREN argument _RPAREN

    _LPAREN  shift, and go to state 64


State 55

   26 num_exp: num_exp . _AROP exp
   31 exp: _LPAREN num_exp . _RPAREN

    _RPAREN  shift, and go to state 65
    _AROP    shift, and go to state 57


State 56

   43 return_statement: _RETURN num_exp _SEMICOLON .

    $default  reduce using rule 43 (return_statement)


State 57

   26 num_exp: num_exp _AROP . exp

    _ID           shift, and go to state 37
    _INT_NUMBER   shift, and go to state 38
    _UINT_NUMBER  shift, and go to state 39
    _LPAREN       shift, and go to state 40

    exp            go to state 66
    literal        go to state 44
    function_call  go to state 45


State 58

   24 assignment_statement: _ID _ASSIGN num_exp . _SEMICOLON
   26 num_exp: num_exp . _AROP exp

    _SEMICOLON  shift, and go to state 67
    _AROP       shift, and go to state 57


State 59

   23 compound_statement: _LBRACKET statement_list _RBRACKET .

    $default  reduce using rule 23 (compound_statement)


State 60

   39 if_statement: if_part _ELSE statement .

    $default  reduce using rule 39 (if_statement)


State 61

   16 ids: ids _COMMA _ID .

    $default  reduce using rule 16 (ids)


State 62

   41 rel_exp: num_exp _RELOP . num_exp

    _ID           shift, and go to state 37
    _INT_NUMBER   shift, and go to state 38
    _UINT_NUMBER  shift, and go to state 39
    _LPAREN       shift, and go to state 40

    num_exp        go to state 68
    exp            go to state 43
    literal        go to state 44
    function_call  go to state 45


State 63

   40 if_part: _IF _LPAREN rel_exp _RPAREN . statement

    _IF        shift, and go to state 23
    _RETURN    shift, and go to state 24
    _ID        shift, and go to state 25
    _LBRACKET  shift, and go to state 26

    statement             go to state 69
    compound_statement    go to state 29
    assignment_statement  go to state 30
    if_statement          go to state 31
    if_part               go to state 32
    return_statement      go to state 33


State 64

   35 function_call: _ID $@4 _LPAREN . argument _RPAREN

    _ID           shift, and go to state 37
    _INT_NUMBER   shift, and go to state 38
    _UINT_NUMBER  shift, and go to state 39
    _LPAREN       shift, and go to state 40

    $default  reduce using rule 36 (argument)

    num_exp        go to state 70
    exp            go to state 43
    literal        go to state 44
    function_call  go to state 45
    argument       go to state 71


State 65

   31 exp: _LPAREN num_exp _RPAREN .

    $default  reduce using rule 31 (exp)


State 66

   26 num_exp: num_exp _AROP exp .

    $default  reduce using rule 26 (num_exp)


State 67

   24 assignment_statement: _ID _ASSIGN num_exp _SEMICOLON .

    $default  reduce using rule 24 (assignment_statement)


State 68

   26 num_exp: num_exp . _AROP exp
   41 rel_exp: num_exp _RELOP num_exp .

    _AROP  shift, and go to state 57

    $default  reduce using rule 41 (rel_exp)


State 69

   40 if_part: _IF _LPAREN rel_exp _RPAREN statement .

    $default  reduce using rule 40 (if_part)


State 70

   26 num_exp: num_exp . _AROP exp
   37 argument: num_exp .

    _AROP  shift, and go to state 57

    $default  reduce using rule 37 (argument)


State 71

   35 function_call: _ID $@4 _LPAREN argument . _RPAREN

    _RPAREN  shift, and go to state 72


State 72

   35 function_call: _ID $@4 _LPAREN argument _RPAREN .

    $default  reduce using rule 35 (function_call)
