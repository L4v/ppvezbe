Grammar

    0 $accept: program $end

    1 program: function_list

    2 function_list: function
    3              | function_list function

    4 $@1: %empty

    5 $@2: %empty

    6 function: _TYPE _ID $@1 _LPAREN parameter _RPAREN $@2 body

    7 parameter: %empty
    8          | _TYPE _ID

    9 body: _LBRACKET variable_list statement_list _RBRACKET

   10 variable_list: %empty
   11              | variable_list variable

   12 $@3: %empty

   13 variable: _TYPE $@3 ids _SEMICOLON

   14 ids: _ID
   15    | ids _COMMA _ID

   16 statement_list: %empty
   17               | statement_list statement

   18 statement: compound_statement
   19          | assignment_statement
   20          | if_statement
   21          | return_statement
   22          | do_statement

   23 compound_statement: _LBRACKET statement_list _RBRACKET

   24 assignment_statement: assignments num_exp _SEMICOLON

   25 assignments: _ID _ASSIGN
   26            | assignments _ID _ASSIGN

   27 num_exp: exp
   28        | num_exp _AROP exp

   29 exp: literal
   30    | _ID
   31    | function_call
   32    | _LPAREN num_exp _RPAREN
   33    | _ID _POST

   34 literal: _INT_NUMBER
   35        | _UINT_NUMBER

   36 $@4: %empty

   37 function_call: _ID $@4 _LPAREN argument _RPAREN

   38 argument: %empty
   39         | num_exp

   40 if_statement: if_part
   41             | if_part _ELSE statement

   42 $@5: %empty

   43 do_statement: _DO statement _WHILE _LPAREN _ID $@5 _RELOP literal _RPAREN _SEMICOLON

   44 if_part: _IF _LPAREN rel_exp _RPAREN statement

   45 rel_exp: num_exp _RELOP num_exp

   46 return_statement: _RETURN _SEMICOLON

   47 $@6: %empty

   48 return_statement: _RETURN num_exp _SEMICOLON $@6


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    _TYPE <i> (258) 6 8 13
    _IF (259) 44
    _ELSE (260) 41
    _RETURN (261) 46 48
    _ID <s> (262) 6 8 14 15 25 26 30 33 37 43
    _INT_NUMBER <s> (263) 34
    _UINT_NUMBER <s> (264) 35
    _LPAREN (265) 6 32 37 43 44
    _RPAREN (266) 6 32 37 43 44
    _LBRACKET (267) 9 23
    _RBRACKET (268) 9 23
    _ASSIGN (269) 25 26
    _SEMICOLON (270) 13 24 43 46 48
    _AROP <i> (271) 28
    _RELOP <i> (272) 43 45
    _COMMA (273) 15
    _POST <i> (274) 33
    _DO (275) 43
    _WHILE (276) 43
    ONLY_IF (277)


Nonterminals, with rules where they appear

    $accept (23)
        on left: 0
    program (24)
        on left: 1
        on right: 0
    function_list (25)
        on left: 2 3
        on right: 1 3
    function (26)
        on left: 6
        on right: 2 3
    $@1 (27)
        on left: 4
        on right: 6
    $@2 (28)
        on left: 5
        on right: 6
    parameter (29)
        on left: 7 8
        on right: 6
    body (30)
        on left: 9
        on right: 6
    variable_list (31)
        on left: 10 11
        on right: 9 11
    variable (32)
        on left: 13
        on right: 11
    $@3 (33)
        on left: 12
        on right: 13
    ids (34)
        on left: 14 15
        on right: 13 15
    statement_list (35)
        on left: 16 17
        on right: 9 17 23
    statement (36)
        on left: 18 19 20 21 22
        on right: 17 41 43 44
    compound_statement (37)
        on left: 23
        on right: 18
    assignment_statement (38)
        on left: 24
        on right: 19
    assignments <i> (39)
        on left: 25 26
        on right: 24 26
    num_exp <i> (40)
        on left: 27 28
        on right: 24 28 32 39 45 48
    exp <i> (41)
        on left: 29 30 31 32 33
        on right: 27 28
    literal <i> (42)
        on left: 34 35
        on right: 29 43
    function_call <i> (43)
        on left: 37
        on right: 31
    $@4 (44)
        on left: 36
        on right: 37
    argument <i> (45)
        on left: 38 39
        on right: 37
    if_statement (46)
        on left: 40 41
        on right: 20
    do_statement (47)
        on left: 43
        on right: 22
    $@5 (48)
        on left: 42
        on right: 43
    if_part (49)
        on left: 44
        on right: 40 41
    rel_exp <i> (50)
        on left: 45
        on right: 44
    return_statement (51)
        on left: 46 48
        on right: 21
    $@6 (52)
        on left: 47
        on right: 48


State 0

    0 $accept: . program $end

    _TYPE  shift, and go to state 1

    program        go to state 2
    function_list  go to state 3
    function       go to state 4


State 1

    6 function: _TYPE . _ID $@1 _LPAREN parameter _RPAREN $@2 body

    _ID  shift, and go to state 5


State 2

    0 $accept: program . $end

    $end  shift, and go to state 6


State 3

    1 program: function_list .
    3 function_list: function_list . function

    _TYPE  shift, and go to state 1

    $default  reduce using rule 1 (program)

    function  go to state 7


State 4

    2 function_list: function .

    $default  reduce using rule 2 (function_list)


State 5

    6 function: _TYPE _ID . $@1 _LPAREN parameter _RPAREN $@2 body

    $default  reduce using rule 4 ($@1)

    $@1  go to state 8


State 6

    0 $accept: program $end .

    $default  accept


State 7

    3 function_list: function_list function .

    $default  reduce using rule 3 (function_list)


State 8

    6 function: _TYPE _ID $@1 . _LPAREN parameter _RPAREN $@2 body

    _LPAREN  shift, and go to state 9


State 9

    6 function: _TYPE _ID $@1 _LPAREN . parameter _RPAREN $@2 body

    _TYPE  shift, and go to state 10

    $default  reduce using rule 7 (parameter)

    parameter  go to state 11


State 10

    8 parameter: _TYPE . _ID

    _ID  shift, and go to state 12


State 11

    6 function: _TYPE _ID $@1 _LPAREN parameter . _RPAREN $@2 body

    _RPAREN  shift, and go to state 13


State 12

    8 parameter: _TYPE _ID .

    $default  reduce using rule 8 (parameter)


State 13

    6 function: _TYPE _ID $@1 _LPAREN parameter _RPAREN . $@2 body

    $default  reduce using rule 5 ($@2)

    $@2  go to state 14


State 14

    6 function: _TYPE _ID $@1 _LPAREN parameter _RPAREN $@2 . body

    _LBRACKET  shift, and go to state 15

    body  go to state 16


State 15

    9 body: _LBRACKET . variable_list statement_list _RBRACKET

    $default  reduce using rule 10 (variable_list)

    variable_list  go to state 17


State 16

    6 function: _TYPE _ID $@1 _LPAREN parameter _RPAREN $@2 body .

    $default  reduce using rule 6 (function)


State 17

    9 body: _LBRACKET variable_list . statement_list _RBRACKET
   11 variable_list: variable_list . variable

    _TYPE  shift, and go to state 18

    $default  reduce using rule 16 (statement_list)

    variable        go to state 19
    statement_list  go to state 20


State 18

   13 variable: _TYPE . $@3 ids _SEMICOLON

    $default  reduce using rule 12 ($@3)

    $@3  go to state 21


State 19

   11 variable_list: variable_list variable .

    $default  reduce using rule 11 (variable_list)


State 20

    9 body: _LBRACKET variable_list statement_list . _RBRACKET
   17 statement_list: statement_list . statement

    _IF        shift, and go to state 22
    _RETURN    shift, and go to state 23
    _ID        shift, and go to state 24
    _LBRACKET  shift, and go to state 25
    _RBRACKET  shift, and go to state 26
    _DO        shift, and go to state 27

    statement             go to state 28
    compound_statement    go to state 29
    assignment_statement  go to state 30
    assignments           go to state 31
    if_statement          go to state 32
    do_statement          go to state 33
    if_part               go to state 34
    return_statement      go to state 35


State 21

   13 variable: _TYPE $@3 . ids _SEMICOLON

    _ID  shift, and go to state 36

    ids  go to state 37


State 22

   44 if_part: _IF . _LPAREN rel_exp _RPAREN statement

    _LPAREN  shift, and go to state 38


State 23

   46 return_statement: _RETURN . _SEMICOLON
   48                 | _RETURN . num_exp _SEMICOLON $@6

    _ID           shift, and go to state 39
    _INT_NUMBER   shift, and go to state 40
    _UINT_NUMBER  shift, and go to state 41
    _LPAREN       shift, and go to state 42
    _SEMICOLON    shift, and go to state 43

    num_exp        go to state 44
    exp            go to state 45
    literal        go to state 46
    function_call  go to state 47


State 24

   25 assignments: _ID . _ASSIGN

    _ASSIGN  shift, and go to state 48


State 25

   23 compound_statement: _LBRACKET . statement_list _RBRACKET

    $default  reduce using rule 16 (statement_list)

    statement_list  go to state 49


State 26

    9 body: _LBRACKET variable_list statement_list _RBRACKET .

    $default  reduce using rule 9 (body)


State 27

   43 do_statement: _DO . statement _WHILE _LPAREN _ID $@5 _RELOP literal _RPAREN _SEMICOLON

    _IF        shift, and go to state 22
    _RETURN    shift, and go to state 23
    _ID        shift, and go to state 24
    _LBRACKET  shift, and go to state 25
    _DO        shift, and go to state 27

    statement             go to state 50
    compound_statement    go to state 29
    assignment_statement  go to state 30
    assignments           go to state 31
    if_statement          go to state 32
    do_statement          go to state 33
    if_part               go to state 34
    return_statement      go to state 35


State 28

   17 statement_list: statement_list statement .

    $default  reduce using rule 17 (statement_list)


State 29

   18 statement: compound_statement .

    $default  reduce using rule 18 (statement)


State 30

   19 statement: assignment_statement .

    $default  reduce using rule 19 (statement)


State 31

   24 assignment_statement: assignments . num_exp _SEMICOLON
   26 assignments: assignments . _ID _ASSIGN

    _ID           shift, and go to state 51
    _INT_NUMBER   shift, and go to state 40
    _UINT_NUMBER  shift, and go to state 41
    _LPAREN       shift, and go to state 42

    num_exp        go to state 52
    exp            go to state 45
    literal        go to state 46
    function_call  go to state 47


State 32

   20 statement: if_statement .

    $default  reduce using rule 20 (statement)


State 33

   22 statement: do_statement .

    $default  reduce using rule 22 (statement)


State 34

   40 if_statement: if_part .
   41             | if_part . _ELSE statement

    _ELSE  shift, and go to state 53

    $default  reduce using rule 40 (if_statement)


State 35

   21 statement: return_statement .

    $default  reduce using rule 21 (statement)


State 36

   14 ids: _ID .

    $default  reduce using rule 14 (ids)


State 37

   13 variable: _TYPE $@3 ids . _SEMICOLON
   15 ids: ids . _COMMA _ID

    _SEMICOLON  shift, and go to state 54
    _COMMA      shift, and go to state 55


State 38

   44 if_part: _IF _LPAREN . rel_exp _RPAREN statement

    _ID           shift, and go to state 39
    _INT_NUMBER   shift, and go to state 40
    _UINT_NUMBER  shift, and go to state 41
    _LPAREN       shift, and go to state 42

    num_exp        go to state 56
    exp            go to state 45
    literal        go to state 46
    function_call  go to state 47
    rel_exp        go to state 57


State 39

   30 exp: _ID .
   33    | _ID . _POST
   37 function_call: _ID . $@4 _LPAREN argument _RPAREN

    _POST  shift, and go to state 58

    _LPAREN   reduce using rule 36 ($@4)
    $default  reduce using rule 30 (exp)

    $@4  go to state 59


State 40

   34 literal: _INT_NUMBER .

    $default  reduce using rule 34 (literal)


State 41

   35 literal: _UINT_NUMBER .

    $default  reduce using rule 35 (literal)


State 42

   32 exp: _LPAREN . num_exp _RPAREN

    _ID           shift, and go to state 39
    _INT_NUMBER   shift, and go to state 40
    _UINT_NUMBER  shift, and go to state 41
    _LPAREN       shift, and go to state 42

    num_exp        go to state 60
    exp            go to state 45
    literal        go to state 46
    function_call  go to state 47


State 43

   46 return_statement: _RETURN _SEMICOLON .

    $default  reduce using rule 46 (return_statement)


State 44

   28 num_exp: num_exp . _AROP exp
   48 return_statement: _RETURN num_exp . _SEMICOLON $@6

    _SEMICOLON  shift, and go to state 61
    _AROP       shift, and go to state 62


State 45

   27 num_exp: exp .

    $default  reduce using rule 27 (num_exp)


State 46

   29 exp: literal .

    $default  reduce using rule 29 (exp)


State 47

   31 exp: function_call .

    $default  reduce using rule 31 (exp)


State 48

   25 assignments: _ID _ASSIGN .

    $default  reduce using rule 25 (assignments)


State 49

   17 statement_list: statement_list . statement
   23 compound_statement: _LBRACKET statement_list . _RBRACKET

    _IF        shift, and go to state 22
    _RETURN    shift, and go to state 23
    _ID        shift, and go to state 24
    _LBRACKET  shift, and go to state 25
    _RBRACKET  shift, and go to state 63
    _DO        shift, and go to state 27

    statement             go to state 28
    compound_statement    go to state 29
    assignment_statement  go to state 30
    assignments           go to state 31
    if_statement          go to state 32
    do_statement          go to state 33
    if_part               go to state 34
    return_statement      go to state 35


State 50

   43 do_statement: _DO statement . _WHILE _LPAREN _ID $@5 _RELOP literal _RPAREN _SEMICOLON

    _WHILE  shift, and go to state 64


State 51

   26 assignments: assignments _ID . _ASSIGN
   30 exp: _ID .
   33    | _ID . _POST
   37 function_call: _ID . $@4 _LPAREN argument _RPAREN

    _ASSIGN  shift, and go to state 65
    _POST    shift, and go to state 58

    _LPAREN   reduce using rule 36 ($@4)
    $default  reduce using rule 30 (exp)

    $@4  go to state 59


State 52

   24 assignment_statement: assignments num_exp . _SEMICOLON
   28 num_exp: num_exp . _AROP exp

    _SEMICOLON  shift, and go to state 66
    _AROP       shift, and go to state 62


State 53

   41 if_statement: if_part _ELSE . statement

    _IF        shift, and go to state 22
    _RETURN    shift, and go to state 23
    _ID        shift, and go to state 24
    _LBRACKET  shift, and go to state 25
    _DO        shift, and go to state 27

    statement             go to state 67
    compound_statement    go to state 29
    assignment_statement  go to state 30
    assignments           go to state 31
    if_statement          go to state 32
    do_statement          go to state 33
    if_part               go to state 34
    return_statement      go to state 35


State 54

   13 variable: _TYPE $@3 ids _SEMICOLON .

    $default  reduce using rule 13 (variable)


State 55

   15 ids: ids _COMMA . _ID

    _ID  shift, and go to state 68


State 56

   28 num_exp: num_exp . _AROP exp
   45 rel_exp: num_exp . _RELOP num_exp

    _AROP   shift, and go to state 62
    _RELOP  shift, and go to state 69


State 57

   44 if_part: _IF _LPAREN rel_exp . _RPAREN statement

    _RPAREN  shift, and go to state 70


State 58

   33 exp: _ID _POST .

    $default  reduce using rule 33 (exp)


State 59

   37 function_call: _ID $@4 . _LPAREN argument _RPAREN

    _LPAREN  shift, and go to state 71


State 60

   28 num_exp: num_exp . _AROP exp
   32 exp: _LPAREN num_exp . _RPAREN

    _RPAREN  shift, and go to state 72
    _AROP    shift, and go to state 62


State 61

   48 return_statement: _RETURN num_exp _SEMICOLON . $@6

    $default  reduce using rule 47 ($@6)

    $@6  go to state 73


State 62

   28 num_exp: num_exp _AROP . exp

    _ID           shift, and go to state 39
    _INT_NUMBER   shift, and go to state 40
    _UINT_NUMBER  shift, and go to state 41
    _LPAREN       shift, and go to state 42

    exp            go to state 74
    literal        go to state 46
    function_call  go to state 47


State 63

   23 compound_statement: _LBRACKET statement_list _RBRACKET .

    $default  reduce using rule 23 (compound_statement)


State 64

   43 do_statement: _DO statement _WHILE . _LPAREN _ID $@5 _RELOP literal _RPAREN _SEMICOLON

    _LPAREN  shift, and go to state 75


State 65

   26 assignments: assignments _ID _ASSIGN .

    $default  reduce using rule 26 (assignments)


State 66

   24 assignment_statement: assignments num_exp _SEMICOLON .

    $default  reduce using rule 24 (assignment_statement)


State 67

   41 if_statement: if_part _ELSE statement .

    $default  reduce using rule 41 (if_statement)


State 68

   15 ids: ids _COMMA _ID .

    $default  reduce using rule 15 (ids)


State 69

   45 rel_exp: num_exp _RELOP . num_exp

    _ID           shift, and go to state 39
    _INT_NUMBER   shift, and go to state 40
    _UINT_NUMBER  shift, and go to state 41
    _LPAREN       shift, and go to state 42

    num_exp        go to state 76
    exp            go to state 45
    literal        go to state 46
    function_call  go to state 47


State 70

   44 if_part: _IF _LPAREN rel_exp _RPAREN . statement

    _IF        shift, and go to state 22
    _RETURN    shift, and go to state 23
    _ID        shift, and go to state 24
    _LBRACKET  shift, and go to state 25
    _DO        shift, and go to state 27

    statement             go to state 77
    compound_statement    go to state 29
    assignment_statement  go to state 30
    assignments           go to state 31
    if_statement          go to state 32
    do_statement          go to state 33
    if_part               go to state 34
    return_statement      go to state 35


State 71

   37 function_call: _ID $@4 _LPAREN . argument _RPAREN

    _ID           shift, and go to state 39
    _INT_NUMBER   shift, and go to state 40
    _UINT_NUMBER  shift, and go to state 41
    _LPAREN       shift, and go to state 42

    $default  reduce using rule 38 (argument)

    num_exp        go to state 78
    exp            go to state 45
    literal        go to state 46
    function_call  go to state 47
    argument       go to state 79


State 72

   32 exp: _LPAREN num_exp _RPAREN .

    $default  reduce using rule 32 (exp)


State 73

   48 return_statement: _RETURN num_exp _SEMICOLON $@6 .

    $default  reduce using rule 48 (return_statement)


State 74

   28 num_exp: num_exp _AROP exp .

    $default  reduce using rule 28 (num_exp)


State 75

   43 do_statement: _DO statement _WHILE _LPAREN . _ID $@5 _RELOP literal _RPAREN _SEMICOLON

    _ID  shift, and go to state 80


State 76

   28 num_exp: num_exp . _AROP exp
   45 rel_exp: num_exp _RELOP num_exp .

    _AROP  shift, and go to state 62

    $default  reduce using rule 45 (rel_exp)


State 77

   44 if_part: _IF _LPAREN rel_exp _RPAREN statement .

    $default  reduce using rule 44 (if_part)


State 78

   28 num_exp: num_exp . _AROP exp
   39 argument: num_exp .

    _AROP  shift, and go to state 62

    $default  reduce using rule 39 (argument)


State 79

   37 function_call: _ID $@4 _LPAREN argument . _RPAREN

    _RPAREN  shift, and go to state 81


State 80

   43 do_statement: _DO statement _WHILE _LPAREN _ID . $@5 _RELOP literal _RPAREN _SEMICOLON

    $default  reduce using rule 42 ($@5)

    $@5  go to state 82


State 81

   37 function_call: _ID $@4 _LPAREN argument _RPAREN .

    $default  reduce using rule 37 (function_call)


State 82

   43 do_statement: _DO statement _WHILE _LPAREN _ID $@5 . _RELOP literal _RPAREN _SEMICOLON

    _RELOP  shift, and go to state 83


State 83

   43 do_statement: _DO statement _WHILE _LPAREN _ID $@5 _RELOP . literal _RPAREN _SEMICOLON

    _INT_NUMBER   shift, and go to state 40
    _UINT_NUMBER  shift, and go to state 41

    literal  go to state 84


State 84

   43 do_statement: _DO statement _WHILE _LPAREN _ID $@5 _RELOP literal . _RPAREN _SEMICOLON

    _RPAREN  shift, and go to state 85


State 85

   43 do_statement: _DO statement _WHILE _LPAREN _ID $@5 _RELOP literal _RPAREN . _SEMICOLON

    _SEMICOLON  shift, and go to state 86


State 86

   43 do_statement: _DO statement _WHILE _LPAREN _ID $@5 _RELOP literal _RPAREN _SEMICOLON .

    $default  reduce using rule 43 (do_statement)
