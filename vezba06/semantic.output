Grammar

    0 $accept: program $end

    1 program: function_list

    2 function_list: function
    3              | function_list function

    4 $@1: %empty

    5 $@2: %empty

    6 function: _TYPE _ID $@1 _LPAREN parameter _RPAREN $@2 body

    7 parameter: %empty
    8          | _TYPE _ID

    9 body: _LBRACKET variable_list statement_list _RBRACKET

   10 variable_list: %empty
   11              | variable_list variable

   12 $@3: %empty

   13 variable: _TYPE $@3 ids _SEMICOLON

   14 ids: _ID
   15    | ids _COMMA _ID

   16 statement_list: %empty
   17               | statement_list statement

   18 statement: compound_statement
   19          | assignment_statement
   20          | if_statement
   21          | return_statement
   22          | do_statement
   23          | switch_statement
   24          | for_statement

   25 @4: %empty

   26 compound_statement: _LBRACKET @4 variable_list statement_list _RBRACKET

   27 assignment_statement: assignments num_exp _SEMICOLON

   28 assignments: _ID _ASSIGN
   29            | assignments _ID _ASSIGN

   30 num_exp: exp
   31        | num_exp _AROP exp

   32 exp: literal
   33    | _ID
   34    | function_call
   35    | _LPAREN num_exp _RPAREN
   36    | _ID _POST

   37 literal: _INT_NUMBER
   38        | _UINT_NUMBER

   39 $@5: %empty

   40 function_call: _ID $@5 _LPAREN argument _RPAREN

   41 argument: %empty
   42         | num_exp

   43 if_statement: if_part
   44             | if_part _ELSE statement

   45 @6: %empty

   46 for_statement: _FOR _LPAREN _TYPE _ID @6 _ASSIGN literal _SEMICOLON rel_exp _SEMICOLON _ID _POST _RPAREN statement

   47 $@7: %empty

   48 switch_statement: _SWITCH $@7 _LPAREN _ID _RPAREN _LBRACKET cases default_case _RBRACKET

   49 default_case: %empty
   50             | _DEFAULT _COLON statement

   51 cases: switch_case
   52      | cases switch_case

   53 switch_case: _CASE literal _COLON statement
   54            | _CASE literal _COLON statement _BREAK _SEMICOLON

   55 $@8: %empty

   56 do_statement: _DO statement _WHILE _LPAREN _ID $@8 _RELOP literal _RPAREN _SEMICOLON

   57 if_part: _IF _LPAREN rel_exp _RPAREN statement

   58 rel_exp: num_exp _RELOP num_exp

   59 return_statement: _RETURN _SEMICOLON

   60 $@9: %empty

   61 return_statement: _RETURN num_exp _SEMICOLON $@9


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    _TYPE <i> (258) 6 8 13 46
    _IF (259) 57
    _ELSE (260) 44
    _RETURN (261) 59 61
    _ID <s> (262) 6 8 14 15 28 29 33 36 40 46 48 56
    _INT_NUMBER <s> (263) 37
    _UINT_NUMBER <s> (264) 38
    _LPAREN (265) 6 35 40 46 48 56 57
    _RPAREN (266) 6 35 40 46 48 56 57
    _LBRACKET (267) 9 26 48
    _RBRACKET (268) 9 26 48
    _ASSIGN (269) 28 29 46
    _SEMICOLON (270) 13 27 46 54 56 59 61
    _AROP <i> (271) 31
    _RELOP <i> (272) 56 58
    _COMMA (273) 15
    _POST <i> (274) 36 46
    _DO (275) 56
    _WHILE (276) 56
    _SWITCH (277) 48
    _CASE (278) 53 54
    _DEFAULT (279) 50
    _BREAK (280) 54
    _COLON (281) 50 53 54
    _FOR (282) 46
    ONLY_IF (283)


Nonterminals, with rules where they appear

    $accept (29)
        on left: 0
    program (30)
        on left: 1
        on right: 0
    function_list (31)
        on left: 2 3
        on right: 1 3
    function (32)
        on left: 6
        on right: 2 3
    $@1 (33)
        on left: 4
        on right: 6
    $@2 (34)
        on left: 5
        on right: 6
    parameter (35)
        on left: 7 8
        on right: 6
    body (36)
        on left: 9
        on right: 6
    variable_list (37)
        on left: 10 11
        on right: 9 11 26
    variable (38)
        on left: 13
        on right: 11
    $@3 (39)
        on left: 12
        on right: 13
    ids (40)
        on left: 14 15
        on right: 13 15
    statement_list (41)
        on left: 16 17
        on right: 9 17 26
    statement (42)
        on left: 18 19 20 21 22 23 24
        on right: 17 44 46 50 53 54 56 57
    compound_statement (43)
        on left: 26
        on right: 18
    @4 (44)
        on left: 25
        on right: 26
    assignment_statement (45)
        on left: 27
        on right: 19
    assignments <i> (46)
        on left: 28 29
        on right: 27 29
    num_exp <i> (47)
        on left: 30 31
        on right: 27 31 35 42 58 61
    exp <i> (48)
        on left: 32 33 34 35 36
        on right: 30 31
    literal <i> (49)
        on left: 37 38
        on right: 32 46 53 54 56
    function_call <i> (50)
        on left: 40
        on right: 34
    $@5 (51)
        on left: 39
        on right: 40
    argument <i> (52)
        on left: 41 42
        on right: 40
    if_statement (53)
        on left: 43 44
        on right: 20
    for_statement (54)
        on left: 46
        on right: 24
    @6 (55)
        on left: 45
        on right: 46
    switch_statement (56)
        on left: 48
        on right: 23
    $@7 (57)
        on left: 47
        on right: 48
    default_case (58)
        on left: 49 50
        on right: 48
    cases (59)
        on left: 51 52
        on right: 48 52
    switch_case (60)
        on left: 53 54
        on right: 51 52
    do_statement (61)
        on left: 56
        on right: 22
    $@8 (62)
        on left: 55
        on right: 56
    if_part (63)
        on left: 57
        on right: 43 44
    rel_exp <i> (64)
        on left: 58
        on right: 46 57
    return_statement (65)
        on left: 59 61
        on right: 21
    $@9 (66)
        on left: 60
        on right: 61


State 0

    0 $accept: . program $end

    _TYPE  shift, and go to state 1

    program        go to state 2
    function_list  go to state 3
    function       go to state 4


State 1

    6 function: _TYPE . _ID $@1 _LPAREN parameter _RPAREN $@2 body

    _ID  shift, and go to state 5


State 2

    0 $accept: program . $end

    $end  shift, and go to state 6


State 3

    1 program: function_list .
    3 function_list: function_list . function

    _TYPE  shift, and go to state 1

    $default  reduce using rule 1 (program)

    function  go to state 7


State 4

    2 function_list: function .

    $default  reduce using rule 2 (function_list)


State 5

    6 function: _TYPE _ID . $@1 _LPAREN parameter _RPAREN $@2 body

    $default  reduce using rule 4 ($@1)

    $@1  go to state 8


State 6

    0 $accept: program $end .

    $default  accept


State 7

    3 function_list: function_list function .

    $default  reduce using rule 3 (function_list)


State 8

    6 function: _TYPE _ID $@1 . _LPAREN parameter _RPAREN $@2 body

    _LPAREN  shift, and go to state 9


State 9

    6 function: _TYPE _ID $@1 _LPAREN . parameter _RPAREN $@2 body

    _TYPE  shift, and go to state 10

    $default  reduce using rule 7 (parameter)

    parameter  go to state 11


State 10

    8 parameter: _TYPE . _ID

    _ID  shift, and go to state 12


State 11

    6 function: _TYPE _ID $@1 _LPAREN parameter . _RPAREN $@2 body

    _RPAREN  shift, and go to state 13


State 12

    8 parameter: _TYPE _ID .

    $default  reduce using rule 8 (parameter)


State 13

    6 function: _TYPE _ID $@1 _LPAREN parameter _RPAREN . $@2 body

    $default  reduce using rule 5 ($@2)

    $@2  go to state 14


State 14

    6 function: _TYPE _ID $@1 _LPAREN parameter _RPAREN $@2 . body

    _LBRACKET  shift, and go to state 15

    body  go to state 16


State 15

    9 body: _LBRACKET . variable_list statement_list _RBRACKET

    $default  reduce using rule 10 (variable_list)

    variable_list  go to state 17


State 16

    6 function: _TYPE _ID $@1 _LPAREN parameter _RPAREN $@2 body .

    $default  reduce using rule 6 (function)


State 17

    9 body: _LBRACKET variable_list . statement_list _RBRACKET
   11 variable_list: variable_list . variable

    _TYPE  shift, and go to state 18

    $default  reduce using rule 16 (statement_list)

    variable        go to state 19
    statement_list  go to state 20


State 18

   13 variable: _TYPE . $@3 ids _SEMICOLON

    $default  reduce using rule 12 ($@3)

    $@3  go to state 21


State 19

   11 variable_list: variable_list variable .

    $default  reduce using rule 11 (variable_list)


State 20

    9 body: _LBRACKET variable_list statement_list . _RBRACKET
   17 statement_list: statement_list . statement

    _IF        shift, and go to state 22
    _RETURN    shift, and go to state 23
    _ID        shift, and go to state 24
    _LBRACKET  shift, and go to state 25
    _RBRACKET  shift, and go to state 26
    _DO        shift, and go to state 27
    _SWITCH    shift, and go to state 28
    _FOR       shift, and go to state 29

    statement             go to state 30
    compound_statement    go to state 31
    assignment_statement  go to state 32
    assignments           go to state 33
    if_statement          go to state 34
    for_statement         go to state 35
    switch_statement      go to state 36
    do_statement          go to state 37
    if_part               go to state 38
    return_statement      go to state 39


State 21

   13 variable: _TYPE $@3 . ids _SEMICOLON

    _ID  shift, and go to state 40

    ids  go to state 41


State 22

   57 if_part: _IF . _LPAREN rel_exp _RPAREN statement

    _LPAREN  shift, and go to state 42


State 23

   59 return_statement: _RETURN . _SEMICOLON
   61                 | _RETURN . num_exp _SEMICOLON $@9

    _ID           shift, and go to state 43
    _INT_NUMBER   shift, and go to state 44
    _UINT_NUMBER  shift, and go to state 45
    _LPAREN       shift, and go to state 46
    _SEMICOLON    shift, and go to state 47

    num_exp        go to state 48
    exp            go to state 49
    literal        go to state 50
    function_call  go to state 51


State 24

   28 assignments: _ID . _ASSIGN

    _ASSIGN  shift, and go to state 52


State 25

   26 compound_statement: _LBRACKET . @4 variable_list statement_list _RBRACKET

    $default  reduce using rule 25 (@4)

    @4  go to state 53


State 26

    9 body: _LBRACKET variable_list statement_list _RBRACKET .

    $default  reduce using rule 9 (body)


State 27

   56 do_statement: _DO . statement _WHILE _LPAREN _ID $@8 _RELOP literal _RPAREN _SEMICOLON

    _IF        shift, and go to state 22
    _RETURN    shift, and go to state 23
    _ID        shift, and go to state 24
    _LBRACKET  shift, and go to state 25
    _DO        shift, and go to state 27
    _SWITCH    shift, and go to state 28
    _FOR       shift, and go to state 29

    statement             go to state 54
    compound_statement    go to state 31
    assignment_statement  go to state 32
    assignments           go to state 33
    if_statement          go to state 34
    for_statement         go to state 35
    switch_statement      go to state 36
    do_statement          go to state 37
    if_part               go to state 38
    return_statement      go to state 39


State 28

   48 switch_statement: _SWITCH . $@7 _LPAREN _ID _RPAREN _LBRACKET cases default_case _RBRACKET

    $default  reduce using rule 47 ($@7)

    $@7  go to state 55


State 29

   46 for_statement: _FOR . _LPAREN _TYPE _ID @6 _ASSIGN literal _SEMICOLON rel_exp _SEMICOLON _ID _POST _RPAREN statement

    _LPAREN  shift, and go to state 56


State 30

   17 statement_list: statement_list statement .

    $default  reduce using rule 17 (statement_list)


State 31

   18 statement: compound_statement .

    $default  reduce using rule 18 (statement)


State 32

   19 statement: assignment_statement .

    $default  reduce using rule 19 (statement)


State 33

   27 assignment_statement: assignments . num_exp _SEMICOLON
   29 assignments: assignments . _ID _ASSIGN

    _ID           shift, and go to state 57
    _INT_NUMBER   shift, and go to state 44
    _UINT_NUMBER  shift, and go to state 45
    _LPAREN       shift, and go to state 46

    num_exp        go to state 58
    exp            go to state 49
    literal        go to state 50
    function_call  go to state 51


State 34

   20 statement: if_statement .

    $default  reduce using rule 20 (statement)


State 35

   24 statement: for_statement .

    $default  reduce using rule 24 (statement)


State 36

   23 statement: switch_statement .

    $default  reduce using rule 23 (statement)


State 37

   22 statement: do_statement .

    $default  reduce using rule 22 (statement)


State 38

   43 if_statement: if_part .
   44             | if_part . _ELSE statement

    _ELSE  shift, and go to state 59

    $default  reduce using rule 43 (if_statement)


State 39

   21 statement: return_statement .

    $default  reduce using rule 21 (statement)


State 40

   14 ids: _ID .

    $default  reduce using rule 14 (ids)


State 41

   13 variable: _TYPE $@3 ids . _SEMICOLON
   15 ids: ids . _COMMA _ID

    _SEMICOLON  shift, and go to state 60
    _COMMA      shift, and go to state 61


State 42

   57 if_part: _IF _LPAREN . rel_exp _RPAREN statement

    _ID           shift, and go to state 43
    _INT_NUMBER   shift, and go to state 44
    _UINT_NUMBER  shift, and go to state 45
    _LPAREN       shift, and go to state 46

    num_exp        go to state 62
    exp            go to state 49
    literal        go to state 50
    function_call  go to state 51
    rel_exp        go to state 63


State 43

   33 exp: _ID .
   36    | _ID . _POST
   40 function_call: _ID . $@5 _LPAREN argument _RPAREN

    _POST  shift, and go to state 64

    _LPAREN   reduce using rule 39 ($@5)
    $default  reduce using rule 33 (exp)

    $@5  go to state 65


State 44

   37 literal: _INT_NUMBER .

    $default  reduce using rule 37 (literal)


State 45

   38 literal: _UINT_NUMBER .

    $default  reduce using rule 38 (literal)


State 46

   35 exp: _LPAREN . num_exp _RPAREN

    _ID           shift, and go to state 43
    _INT_NUMBER   shift, and go to state 44
    _UINT_NUMBER  shift, and go to state 45
    _LPAREN       shift, and go to state 46

    num_exp        go to state 66
    exp            go to state 49
    literal        go to state 50
    function_call  go to state 51


State 47

   59 return_statement: _RETURN _SEMICOLON .

    $default  reduce using rule 59 (return_statement)


State 48

   31 num_exp: num_exp . _AROP exp
   61 return_statement: _RETURN num_exp . _SEMICOLON $@9

    _SEMICOLON  shift, and go to state 67
    _AROP       shift, and go to state 68


State 49

   30 num_exp: exp .

    $default  reduce using rule 30 (num_exp)


State 50

   32 exp: literal .

    $default  reduce using rule 32 (exp)


State 51

   34 exp: function_call .

    $default  reduce using rule 34 (exp)


State 52

   28 assignments: _ID _ASSIGN .

    $default  reduce using rule 28 (assignments)


State 53

   26 compound_statement: _LBRACKET @4 . variable_list statement_list _RBRACKET

    $default  reduce using rule 10 (variable_list)

    variable_list  go to state 69


State 54

   56 do_statement: _DO statement . _WHILE _LPAREN _ID $@8 _RELOP literal _RPAREN _SEMICOLON

    _WHILE  shift, and go to state 70


State 55

   48 switch_statement: _SWITCH $@7 . _LPAREN _ID _RPAREN _LBRACKET cases default_case _RBRACKET

    _LPAREN  shift, and go to state 71


State 56

   46 for_statement: _FOR _LPAREN . _TYPE _ID @6 _ASSIGN literal _SEMICOLON rel_exp _SEMICOLON _ID _POST _RPAREN statement

    _TYPE  shift, and go to state 72


State 57

   29 assignments: assignments _ID . _ASSIGN
   33 exp: _ID .
   36    | _ID . _POST
   40 function_call: _ID . $@5 _LPAREN argument _RPAREN

    _ASSIGN  shift, and go to state 73
    _POST    shift, and go to state 64

    _LPAREN   reduce using rule 39 ($@5)
    $default  reduce using rule 33 (exp)

    $@5  go to state 65


State 58

   27 assignment_statement: assignments num_exp . _SEMICOLON
   31 num_exp: num_exp . _AROP exp

    _SEMICOLON  shift, and go to state 74
    _AROP       shift, and go to state 68


State 59

   44 if_statement: if_part _ELSE . statement

    _IF        shift, and go to state 22
    _RETURN    shift, and go to state 23
    _ID        shift, and go to state 24
    _LBRACKET  shift, and go to state 25
    _DO        shift, and go to state 27
    _SWITCH    shift, and go to state 28
    _FOR       shift, and go to state 29

    statement             go to state 75
    compound_statement    go to state 31
    assignment_statement  go to state 32
    assignments           go to state 33
    if_statement          go to state 34
    for_statement         go to state 35
    switch_statement      go to state 36
    do_statement          go to state 37
    if_part               go to state 38
    return_statement      go to state 39


State 60

   13 variable: _TYPE $@3 ids _SEMICOLON .

    $default  reduce using rule 13 (variable)


State 61

   15 ids: ids _COMMA . _ID

    _ID  shift, and go to state 76


State 62

   31 num_exp: num_exp . _AROP exp
   58 rel_exp: num_exp . _RELOP num_exp

    _AROP   shift, and go to state 68
    _RELOP  shift, and go to state 77


State 63

   57 if_part: _IF _LPAREN rel_exp . _RPAREN statement

    _RPAREN  shift, and go to state 78


State 64

   36 exp: _ID _POST .

    $default  reduce using rule 36 (exp)


State 65

   40 function_call: _ID $@5 . _LPAREN argument _RPAREN

    _LPAREN  shift, and go to state 79


State 66

   31 num_exp: num_exp . _AROP exp
   35 exp: _LPAREN num_exp . _RPAREN

    _RPAREN  shift, and go to state 80
    _AROP    shift, and go to state 68


State 67

   61 return_statement: _RETURN num_exp _SEMICOLON . $@9

    $default  reduce using rule 60 ($@9)

    $@9  go to state 81


State 68

   31 num_exp: num_exp _AROP . exp

    _ID           shift, and go to state 43
    _INT_NUMBER   shift, and go to state 44
    _UINT_NUMBER  shift, and go to state 45
    _LPAREN       shift, and go to state 46

    exp            go to state 82
    literal        go to state 50
    function_call  go to state 51


State 69

   11 variable_list: variable_list . variable
   26 compound_statement: _LBRACKET @4 variable_list . statement_list _RBRACKET

    _TYPE  shift, and go to state 18

    $default  reduce using rule 16 (statement_list)

    variable        go to state 19
    statement_list  go to state 83


State 70

   56 do_statement: _DO statement _WHILE . _LPAREN _ID $@8 _RELOP literal _RPAREN _SEMICOLON

    _LPAREN  shift, and go to state 84


State 71

   48 switch_statement: _SWITCH $@7 _LPAREN . _ID _RPAREN _LBRACKET cases default_case _RBRACKET

    _ID  shift, and go to state 85


State 72

   46 for_statement: _FOR _LPAREN _TYPE . _ID @6 _ASSIGN literal _SEMICOLON rel_exp _SEMICOLON _ID _POST _RPAREN statement

    _ID  shift, and go to state 86


State 73

   29 assignments: assignments _ID _ASSIGN .

    $default  reduce using rule 29 (assignments)


State 74

   27 assignment_statement: assignments num_exp _SEMICOLON .

    $default  reduce using rule 27 (assignment_statement)


State 75

   44 if_statement: if_part _ELSE statement .

    $default  reduce using rule 44 (if_statement)


State 76

   15 ids: ids _COMMA _ID .

    $default  reduce using rule 15 (ids)


State 77

   58 rel_exp: num_exp _RELOP . num_exp

    _ID           shift, and go to state 43
    _INT_NUMBER   shift, and go to state 44
    _UINT_NUMBER  shift, and go to state 45
    _LPAREN       shift, and go to state 46

    num_exp        go to state 87
    exp            go to state 49
    literal        go to state 50
    function_call  go to state 51


State 78

   57 if_part: _IF _LPAREN rel_exp _RPAREN . statement

    _IF        shift, and go to state 22
    _RETURN    shift, and go to state 23
    _ID        shift, and go to state 24
    _LBRACKET  shift, and go to state 25
    _DO        shift, and go to state 27
    _SWITCH    shift, and go to state 28
    _FOR       shift, and go to state 29

    statement             go to state 88
    compound_statement    go to state 31
    assignment_statement  go to state 32
    assignments           go to state 33
    if_statement          go to state 34
    for_statement         go to state 35
    switch_statement      go to state 36
    do_statement          go to state 37
    if_part               go to state 38
    return_statement      go to state 39


State 79

   40 function_call: _ID $@5 _LPAREN . argument _RPAREN

    _ID           shift, and go to state 43
    _INT_NUMBER   shift, and go to state 44
    _UINT_NUMBER  shift, and go to state 45
    _LPAREN       shift, and go to state 46

    $default  reduce using rule 41 (argument)

    num_exp        go to state 89
    exp            go to state 49
    literal        go to state 50
    function_call  go to state 51
    argument       go to state 90


State 80

   35 exp: _LPAREN num_exp _RPAREN .

    $default  reduce using rule 35 (exp)


State 81

   61 return_statement: _RETURN num_exp _SEMICOLON $@9 .

    $default  reduce using rule 61 (return_statement)


State 82

   31 num_exp: num_exp _AROP exp .

    $default  reduce using rule 31 (num_exp)


State 83

   17 statement_list: statement_list . statement
   26 compound_statement: _LBRACKET @4 variable_list statement_list . _RBRACKET

    _IF        shift, and go to state 22
    _RETURN    shift, and go to state 23
    _ID        shift, and go to state 24
    _LBRACKET  shift, and go to state 25
    _RBRACKET  shift, and go to state 91
    _DO        shift, and go to state 27
    _SWITCH    shift, and go to state 28
    _FOR       shift, and go to state 29

    statement             go to state 30
    compound_statement    go to state 31
    assignment_statement  go to state 32
    assignments           go to state 33
    if_statement          go to state 34
    for_statement         go to state 35
    switch_statement      go to state 36
    do_statement          go to state 37
    if_part               go to state 38
    return_statement      go to state 39


State 84

   56 do_statement: _DO statement _WHILE _LPAREN . _ID $@8 _RELOP literal _RPAREN _SEMICOLON

    _ID  shift, and go to state 92


State 85

   48 switch_statement: _SWITCH $@7 _LPAREN _ID . _RPAREN _LBRACKET cases default_case _RBRACKET

    _RPAREN  shift, and go to state 93


State 86

   46 for_statement: _FOR _LPAREN _TYPE _ID . @6 _ASSIGN literal _SEMICOLON rel_exp _SEMICOLON _ID _POST _RPAREN statement

    $default  reduce using rule 45 (@6)

    @6  go to state 94


State 87

   31 num_exp: num_exp . _AROP exp
   58 rel_exp: num_exp _RELOP num_exp .

    _AROP  shift, and go to state 68

    $default  reduce using rule 58 (rel_exp)


State 88

   57 if_part: _IF _LPAREN rel_exp _RPAREN statement .

    $default  reduce using rule 57 (if_part)


State 89

   31 num_exp: num_exp . _AROP exp
   42 argument: num_exp .

    _AROP  shift, and go to state 68

    $default  reduce using rule 42 (argument)


State 90

   40 function_call: _ID $@5 _LPAREN argument . _RPAREN

    _RPAREN  shift, and go to state 95


State 91

   26 compound_statement: _LBRACKET @4 variable_list statement_list _RBRACKET .

    $default  reduce using rule 26 (compound_statement)


State 92

   56 do_statement: _DO statement _WHILE _LPAREN _ID . $@8 _RELOP literal _RPAREN _SEMICOLON

    $default  reduce using rule 55 ($@8)

    $@8  go to state 96


State 93

   48 switch_statement: _SWITCH $@7 _LPAREN _ID _RPAREN . _LBRACKET cases default_case _RBRACKET

    _LBRACKET  shift, and go to state 97


State 94

   46 for_statement: _FOR _LPAREN _TYPE _ID @6 . _ASSIGN literal _SEMICOLON rel_exp _SEMICOLON _ID _POST _RPAREN statement

    _ASSIGN  shift, and go to state 98


State 95

   40 function_call: _ID $@5 _LPAREN argument _RPAREN .

    $default  reduce using rule 40 (function_call)


State 96

   56 do_statement: _DO statement _WHILE _LPAREN _ID $@8 . _RELOP literal _RPAREN _SEMICOLON

    _RELOP  shift, and go to state 99


State 97

   48 switch_statement: _SWITCH $@7 _LPAREN _ID _RPAREN _LBRACKET . cases default_case _RBRACKET

    _CASE  shift, and go to state 100

    cases        go to state 101
    switch_case  go to state 102


State 98

   46 for_statement: _FOR _LPAREN _TYPE _ID @6 _ASSIGN . literal _SEMICOLON rel_exp _SEMICOLON _ID _POST _RPAREN statement

    _INT_NUMBER   shift, and go to state 44
    _UINT_NUMBER  shift, and go to state 45

    literal  go to state 103


State 99

   56 do_statement: _DO statement _WHILE _LPAREN _ID $@8 _RELOP . literal _RPAREN _SEMICOLON

    _INT_NUMBER   shift, and go to state 44
    _UINT_NUMBER  shift, and go to state 45

    literal  go to state 104


State 100

   53 switch_case: _CASE . literal _COLON statement
   54            | _CASE . literal _COLON statement _BREAK _SEMICOLON

    _INT_NUMBER   shift, and go to state 44
    _UINT_NUMBER  shift, and go to state 45

    literal  go to state 105


State 101

   48 switch_statement: _SWITCH $@7 _LPAREN _ID _RPAREN _LBRACKET cases . default_case _RBRACKET
   52 cases: cases . switch_case

    _CASE     shift, and go to state 100
    _DEFAULT  shift, and go to state 106

    $default  reduce using rule 49 (default_case)

    default_case  go to state 107
    switch_case   go to state 108


State 102

   51 cases: switch_case .

    $default  reduce using rule 51 (cases)


State 103

   46 for_statement: _FOR _LPAREN _TYPE _ID @6 _ASSIGN literal . _SEMICOLON rel_exp _SEMICOLON _ID _POST _RPAREN statement

    _SEMICOLON  shift, and go to state 109


State 104

   56 do_statement: _DO statement _WHILE _LPAREN _ID $@8 _RELOP literal . _RPAREN _SEMICOLON

    _RPAREN  shift, and go to state 110


State 105

   53 switch_case: _CASE literal . _COLON statement
   54            | _CASE literal . _COLON statement _BREAK _SEMICOLON

    _COLON  shift, and go to state 111


State 106

   50 default_case: _DEFAULT . _COLON statement

    _COLON  shift, and go to state 112


State 107

   48 switch_statement: _SWITCH $@7 _LPAREN _ID _RPAREN _LBRACKET cases default_case . _RBRACKET

    _RBRACKET  shift, and go to state 113


State 108

   52 cases: cases switch_case .

    $default  reduce using rule 52 (cases)


State 109

   46 for_statement: _FOR _LPAREN _TYPE _ID @6 _ASSIGN literal _SEMICOLON . rel_exp _SEMICOLON _ID _POST _RPAREN statement

    _ID           shift, and go to state 43
    _INT_NUMBER   shift, and go to state 44
    _UINT_NUMBER  shift, and go to state 45
    _LPAREN       shift, and go to state 46

    num_exp        go to state 62
    exp            go to state 49
    literal        go to state 50
    function_call  go to state 51
    rel_exp        go to state 114


State 110

   56 do_statement: _DO statement _WHILE _LPAREN _ID $@8 _RELOP literal _RPAREN . _SEMICOLON

    _SEMICOLON  shift, and go to state 115


State 111

   53 switch_case: _CASE literal _COLON . statement
   54            | _CASE literal _COLON . statement _BREAK _SEMICOLON

    _IF        shift, and go to state 22
    _RETURN    shift, and go to state 23
    _ID        shift, and go to state 24
    _LBRACKET  shift, and go to state 25
    _DO        shift, and go to state 27
    _SWITCH    shift, and go to state 28
    _FOR       shift, and go to state 29

    statement             go to state 116
    compound_statement    go to state 31
    assignment_statement  go to state 32
    assignments           go to state 33
    if_statement          go to state 34
    for_statement         go to state 35
    switch_statement      go to state 36
    do_statement          go to state 37
    if_part               go to state 38
    return_statement      go to state 39


State 112

   50 default_case: _DEFAULT _COLON . statement

    _IF        shift, and go to state 22
    _RETURN    shift, and go to state 23
    _ID        shift, and go to state 24
    _LBRACKET  shift, and go to state 25
    _DO        shift, and go to state 27
    _SWITCH    shift, and go to state 28
    _FOR       shift, and go to state 29

    statement             go to state 117
    compound_statement    go to state 31
    assignment_statement  go to state 32
    assignments           go to state 33
    if_statement          go to state 34
    for_statement         go to state 35
    switch_statement      go to state 36
    do_statement          go to state 37
    if_part               go to state 38
    return_statement      go to state 39


State 113

   48 switch_statement: _SWITCH $@7 _LPAREN _ID _RPAREN _LBRACKET cases default_case _RBRACKET .

    $default  reduce using rule 48 (switch_statement)


State 114

   46 for_statement: _FOR _LPAREN _TYPE _ID @6 _ASSIGN literal _SEMICOLON rel_exp . _SEMICOLON _ID _POST _RPAREN statement

    _SEMICOLON  shift, and go to state 118


State 115

   56 do_statement: _DO statement _WHILE _LPAREN _ID $@8 _RELOP literal _RPAREN _SEMICOLON .

    $default  reduce using rule 56 (do_statement)


State 116

   53 switch_case: _CASE literal _COLON statement .
   54            | _CASE literal _COLON statement . _BREAK _SEMICOLON

    _BREAK  shift, and go to state 119

    $default  reduce using rule 53 (switch_case)


State 117

   50 default_case: _DEFAULT _COLON statement .

    $default  reduce using rule 50 (default_case)


State 118

   46 for_statement: _FOR _LPAREN _TYPE _ID @6 _ASSIGN literal _SEMICOLON rel_exp _SEMICOLON . _ID _POST _RPAREN statement

    _ID  shift, and go to state 120


State 119

   54 switch_case: _CASE literal _COLON statement _BREAK . _SEMICOLON

    _SEMICOLON  shift, and go to state 121


State 120

   46 for_statement: _FOR _LPAREN _TYPE _ID @6 _ASSIGN literal _SEMICOLON rel_exp _SEMICOLON _ID . _POST _RPAREN statement

    _POST  shift, and go to state 122


State 121

   54 switch_case: _CASE literal _COLON statement _BREAK _SEMICOLON .

    $default  reduce using rule 54 (switch_case)


State 122

   46 for_statement: _FOR _LPAREN _TYPE _ID @6 _ASSIGN literal _SEMICOLON rel_exp _SEMICOLON _ID _POST . _RPAREN statement

    _RPAREN  shift, and go to state 123


State 123

   46 for_statement: _FOR _LPAREN _TYPE _ID @6 _ASSIGN literal _SEMICOLON rel_exp _SEMICOLON _ID _POST _RPAREN . statement

    _IF        shift, and go to state 22
    _RETURN    shift, and go to state 23
    _ID        shift, and go to state 24
    _LBRACKET  shift, and go to state 25
    _DO        shift, and go to state 27
    _SWITCH    shift, and go to state 28
    _FOR       shift, and go to state 29

    statement             go to state 124
    compound_statement    go to state 31
    assignment_statement  go to state 32
    assignments           go to state 33
    if_statement          go to state 34
    for_statement         go to state 35
    switch_statement      go to state 36
    do_statement          go to state 37
    if_part               go to state 38
    return_statement      go to state 39


State 124

   46 for_statement: _FOR _LPAREN _TYPE _ID @6 _ASSIGN literal _SEMICOLON rel_exp _SEMICOLON _ID _POST _RPAREN statement .

    $default  reduce using rule 46 (for_statement)
